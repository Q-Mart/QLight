// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _toplevel_HH_
#define _toplevel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toplevel_mul_32s_cud.h"
#include "toplevel_mul_32nsdEe.h"
#include "toplevel_mac_mulaeOg.h"
#include "toplevel_sectionDbkb.h"
#include "toplevel_visited.h"
#include "toplevel_AXILiteS_s_axi.h"
#include "toplevel_MAXI_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_MAXI_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_MAXI_ID_WIDTH = 1,
         unsigned int C_M_AXI_MAXI_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_MAXI_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MAXI_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_MAXI_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_MAXI_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_MAXI_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 7,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct toplevel : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_MAXI_AWVALID;
    sc_in< sc_logic > m_axi_MAXI_AWREADY;
    sc_out< sc_uint<C_M_AXI_MAXI_ADDR_WIDTH> > m_axi_MAXI_AWADDR;
    sc_out< sc_uint<C_M_AXI_MAXI_ID_WIDTH> > m_axi_MAXI_AWID;
    sc_out< sc_lv<8> > m_axi_MAXI_AWLEN;
    sc_out< sc_lv<3> > m_axi_MAXI_AWSIZE;
    sc_out< sc_lv<2> > m_axi_MAXI_AWBURST;
    sc_out< sc_lv<2> > m_axi_MAXI_AWLOCK;
    sc_out< sc_lv<4> > m_axi_MAXI_AWCACHE;
    sc_out< sc_lv<3> > m_axi_MAXI_AWPROT;
    sc_out< sc_lv<4> > m_axi_MAXI_AWQOS;
    sc_out< sc_lv<4> > m_axi_MAXI_AWREGION;
    sc_out< sc_uint<C_M_AXI_MAXI_AWUSER_WIDTH> > m_axi_MAXI_AWUSER;
    sc_out< sc_logic > m_axi_MAXI_WVALID;
    sc_in< sc_logic > m_axi_MAXI_WREADY;
    sc_out< sc_uint<C_M_AXI_MAXI_DATA_WIDTH> > m_axi_MAXI_WDATA;
    sc_out< sc_uint<C_M_AXI_MAXI_DATA_WIDTH/8> > m_axi_MAXI_WSTRB;
    sc_out< sc_logic > m_axi_MAXI_WLAST;
    sc_out< sc_uint<C_M_AXI_MAXI_ID_WIDTH> > m_axi_MAXI_WID;
    sc_out< sc_uint<C_M_AXI_MAXI_WUSER_WIDTH> > m_axi_MAXI_WUSER;
    sc_out< sc_logic > m_axi_MAXI_ARVALID;
    sc_in< sc_logic > m_axi_MAXI_ARREADY;
    sc_out< sc_uint<C_M_AXI_MAXI_ADDR_WIDTH> > m_axi_MAXI_ARADDR;
    sc_out< sc_uint<C_M_AXI_MAXI_ID_WIDTH> > m_axi_MAXI_ARID;
    sc_out< sc_lv<8> > m_axi_MAXI_ARLEN;
    sc_out< sc_lv<3> > m_axi_MAXI_ARSIZE;
    sc_out< sc_lv<2> > m_axi_MAXI_ARBURST;
    sc_out< sc_lv<2> > m_axi_MAXI_ARLOCK;
    sc_out< sc_lv<4> > m_axi_MAXI_ARCACHE;
    sc_out< sc_lv<3> > m_axi_MAXI_ARPROT;
    sc_out< sc_lv<4> > m_axi_MAXI_ARQOS;
    sc_out< sc_lv<4> > m_axi_MAXI_ARREGION;
    sc_out< sc_uint<C_M_AXI_MAXI_ARUSER_WIDTH> > m_axi_MAXI_ARUSER;
    sc_in< sc_logic > m_axi_MAXI_RVALID;
    sc_out< sc_logic > m_axi_MAXI_RREADY;
    sc_in< sc_uint<C_M_AXI_MAXI_DATA_WIDTH> > m_axi_MAXI_RDATA;
    sc_in< sc_logic > m_axi_MAXI_RLAST;
    sc_in< sc_uint<C_M_AXI_MAXI_ID_WIDTH> > m_axi_MAXI_RID;
    sc_in< sc_uint<C_M_AXI_MAXI_RUSER_WIDTH> > m_axi_MAXI_RUSER;
    sc_in< sc_lv<2> > m_axi_MAXI_RRESP;
    sc_in< sc_logic > m_axi_MAXI_BVALID;
    sc_out< sc_logic > m_axi_MAXI_BREADY;
    sc_in< sc_lv<2> > m_axi_MAXI_BRESP;
    sc_in< sc_uint<C_M_AXI_MAXI_ID_WIDTH> > m_axi_MAXI_BID;
    sc_in< sc_uint<C_M_AXI_MAXI_BUSER_WIDTH> > m_axi_MAXI_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const5;
    sc_signal< sc_lv<32> > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const4;


    // Module declarations
    toplevel(sc_module_name name);
    SC_HAS_PROCESS(toplevel);

    ~toplevel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    toplevel_sectionDbkb* sectionData_U;
    toplevel_visited* visited_U;
    toplevel_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* toplevel_AXILiteS_s_axi_U;
    toplevel_MAXI_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_MAXI_ID_WIDTH,C_M_AXI_MAXI_ADDR_WIDTH,C_M_AXI_MAXI_DATA_WIDTH,C_M_AXI_MAXI_AWUSER_WIDTH,C_M_AXI_MAXI_ARUSER_WIDTH,C_M_AXI_MAXI_WUSER_WIDTH,C_M_AXI_MAXI_RUSER_WIDTH,C_M_AXI_MAXI_BUSER_WIDTH,C_M_AXI_MAXI_USER_VALUE,C_M_AXI_MAXI_PROT_VALUE,C_M_AXI_MAXI_CACHE_VALUE>* toplevel_MAXI_m_axi_U;
    toplevel_mul_32s_cud<1,3,32,32,32>* toplevel_mul_32s_cud_U1;
    toplevel_mul_32nsdEe<1,3,32,32,64>* toplevel_mul_32nsdEe_U2;
    toplevel_mac_mulaeOg<1,1,13,13,13,13>* toplevel_mac_mulaeOg_U3;
    toplevel_mac_mulaeOg<1,1,13,13,13,13>* toplevel_mac_mulaeOg_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<31> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > ram;
    sc_signal< sc_lv<32> > length_r;
    sc_signal< sc_lv<32> > length_r_0_data_reg;
    sc_signal< sc_logic > length_r_0_vld_reg;
    sc_signal< sc_logic > length_r_0_ack_out;
    sc_signal< sc_lv<32> > height;
    sc_signal< sc_lv<32> > height_0_data_reg;
    sc_signal< sc_logic > height_0_vld_reg;
    sc_signal< sc_logic > height_0_ack_out;
    sc_signal< sc_lv<32> > r_1_data_reg;
    sc_signal< sc_logic > r_1_vld_reg;
    sc_signal< sc_logic > r_1_vld_in;
    sc_signal< sc_logic > r_1_ack_in;
    sc_signal< sc_lv<32> > g_1_data_reg;
    sc_signal< sc_logic > g_1_vld_reg;
    sc_signal< sc_logic > g_1_vld_in;
    sc_signal< sc_logic > g_1_ack_in;
    sc_signal< sc_lv<32> > b_1_data_reg;
    sc_signal< sc_logic > b_1_vld_reg;
    sc_signal< sc_logic > b_1_vld_in;
    sc_signal< sc_logic > b_1_ack_in;
    sc_signal< sc_lv<32> > version_1_data_reg;
    sc_signal< sc_lv<32> > version_1_data_in;
    sc_signal< sc_logic > version_1_vld_reg;
    sc_signal< sc_logic > version_1_vld_in;
    sc_signal< sc_logic > version_1_ack_in;
    sc_signal< sc_lv<13> > sectionData_address0;
    sc_signal< sc_logic > sectionData_ce0;
    sc_signal< sc_logic > sectionData_we0;
    sc_signal< sc_lv<32> > sectionData_q0;
    sc_signal< sc_lv<13> > sectionData_address1;
    sc_signal< sc_logic > sectionData_ce1;
    sc_signal< sc_lv<32> > sectionData_q1;
    sc_signal< sc_lv<12> > numberOfPixelsVisted;
    sc_signal< sc_lv<13> > visited_address0;
    sc_signal< sc_logic > visited_ce0;
    sc_signal< sc_logic > visited_we0;
    sc_signal< sc_lv<32> > visited_q0;
    sc_signal< sc_lv<13> > visited_address1;
    sc_signal< sc_logic > visited_ce1;
    sc_signal< sc_logic > visited_we1;
    sc_signal< sc_lv<32> > visited_d1;
    sc_signal< sc_lv<32> > visited_q1;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_logic > MAXI_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > MAXI_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > exitcond_reg_966;
    sc_signal< sc_logic > MAXI_AWREADY;
    sc_signal< sc_logic > MAXI_WREADY;
    sc_signal< sc_logic > MAXI_ARVALID;
    sc_signal< sc_logic > MAXI_ARREADY;
    sc_signal< sc_lv<32> > MAXI_ARADDR;
    sc_signal< sc_lv<32> > MAXI_ARLEN;
    sc_signal< sc_logic > MAXI_RVALID;
    sc_signal< sc_logic > MAXI_RREADY;
    sc_signal< sc_lv<32> > MAXI_RDATA;
    sc_signal< sc_logic > MAXI_RLAST;
    sc_signal< sc_lv<1> > MAXI_RID;
    sc_signal< sc_lv<1> > MAXI_RUSER;
    sc_signal< sc_lv<2> > MAXI_RRESP;
    sc_signal< sc_logic > MAXI_BVALID;
    sc_signal< sc_lv<2> > MAXI_BRESP;
    sc_signal< sc_lv<1> > MAXI_BID;
    sc_signal< sc_lv<1> > MAXI_BUSER;
    sc_signal< sc_lv<30> > indvar_reg_308;
    sc_signal< sc_lv<30> > indvar_reg_308_pp0_iter1_reg;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<12> > i_i_reg_353;
    sc_signal< sc_lv<64> > indvar_flatten_reg_364;
    sc_signal< sc_lv<32> > x_i_reg_375;
    sc_signal< sc_lv<12> > agg_result_V_1_i_reg_386;
    sc_signal< sc_lv<12> > agg_result_V_load_i_reg_398;
    sc_signal< sc_lv<32> > y_i_reg_410;
    sc_signal< sc_lv<30> > ram1_reg_925;
    sc_signal< sc_lv<32> > length_read_reg_930;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > height_read_reg_936;
    sc_signal< sc_lv<32> > tmp_fu_437_p2;
    sc_signal< sc_lv<32> > tmp_reg_944;
    sc_signal< sc_lv<30> > tmp_9_fu_447_p1;
    sc_signal< sc_lv<30> > tmp_9_reg_949;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_sig_ioackin_MAXI_ARREADY;
    sc_signal< sc_lv<1> > exitcond_fu_465_p2;
    sc_signal< sc_lv<1> > exitcond_reg_966_pp0_iter1_reg;
    sc_signal< sc_lv<30> > indvar_next_fu_470_p2;
    sc_signal< sc_lv<30> > indvar_next_reg_970;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > MAXI_addr_read_reg_975;
    sc_signal< sc_lv<13> > tmp_10_fu_487_p1;
    sc_signal< sc_lv<13> > tmp_10_reg_987;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > grp_fu_496_p2;
    sc_signal< sc_lv<64> > bound_reg_1003;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > indvar_flatten_next1_fu_512_p2;
    sc_signal< sc_lv<64> > indvar_flatten_next1_reg_1012;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > y_mid2_fu_523_p3;
    sc_signal< sc_lv<32> > y_mid2_reg_1017;
    sc_signal< sc_lv<1> > exitcond_flatten1_fu_507_p2;
    sc_signal< sc_lv<32> > x_cast_mid2_v_fu_537_p3;
    sc_signal< sc_lv<32> > x_cast_mid2_v_reg_1022;
    sc_signal< sc_lv<13> > tmp_11_fu_545_p1;
    sc_signal< sc_lv<13> > tmp_11_reg_1027;
    sc_signal< sc_lv<13> > tmp_14_fu_549_p1;
    sc_signal< sc_lv<13> > tmp_14_reg_1032;
    sc_signal< sc_lv<13> > grp_fu_913_p3;
    sc_signal< sc_lv<13> > tmp_4_reg_1037;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<13> > current_V_fu_558_p2;
    sc_signal< sc_lv<13> > current_V_reg_1043;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > sectionData_load_reg_1053;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > sectionData_load_1_reg_1072;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > sectionData_load_2_reg_1081;
    sc_signal< sc_lv<12> > numberOfPixelsVisted_1_reg_1090;
    sc_signal< sc_lv<1> > tmp_i_fu_597_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_1098;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state24_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state27_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<12> > i_fu_602_p2;
    sc_signal< sc_lv<12> > i_reg_1102;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<15> > tmp_19_i_fu_624_p2;
    sc_signal< sc_lv<15> > tmp_19_i_reg_1107;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state25_pp1_stage1_iter0;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<1> > tmp_i_i_fu_655_p2;
    sc_signal< sc_lv<1> > tmp_i_i_reg_1128;
    sc_signal< sc_lv<1> > val_assign_fu_676_p2;
    sc_signal< sc_lv<1> > val_assign_reg_1133;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< bool > ap_block_state26_pp1_stage2_iter0;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< sc_lv<32> > tmp_12_fu_697_p2;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<44> > r_V_2_cast_fu_723_p1;
    sc_signal< sc_lv<44> > r_V_2_cast_reg_1142;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_768_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1147;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state31_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state32_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state33_pp2_stage0_iter2;
    sc_signal< bool > ap_block_state34_pp2_stage0_iter3;
    sc_signal< bool > ap_block_state35_pp2_stage0_iter4;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1147_pp2_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1147_pp2_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_1147_pp2_iter3_reg;
    sc_signal< sc_lv<64> > indvar_flatten_next_fu_773_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<32> > tmp_27_i_mid2_v_fu_798_p3;
    sc_signal< sc_lv<32> > tmp_27_i_mid2_v_reg_1156;
    sc_signal< sc_lv<13> > tmp_18_fu_806_p1;
    sc_signal< sc_lv<13> > tmp_18_reg_1161;
    sc_signal< sc_lv<13> > tmp_19_fu_810_p1;
    sc_signal< sc_lv<13> > tmp_19_reg_1166;
    sc_signal< sc_lv<32> > y_2_fu_814_p2;
    sc_signal< sc_lv<13> > current_V_1_fu_825_p2;
    sc_signal< sc_lv<13> > current_V_1_reg_1176;
    sc_signal< sc_lv<1> > tmp_i_i1_fu_848_p2;
    sc_signal< sc_lv<1> > tmp_i_i1_reg_1192;
    sc_signal< sc_lv<1> > tmp_i_i1_5_fu_853_p2;
    sc_signal< sc_lv<1> > tmp_i_i1_5_reg_1197;
    sc_signal< sc_lv<1> > tmp_35_i_i1_fu_858_p2;
    sc_signal< sc_lv<1> > tmp_35_i_i1_reg_1202;
    sc_signal< sc_lv<12> > tmp_34_agg_result_V_s_fu_878_p3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter4;
    sc_signal< sc_lv<12> > tmp_34_agg_result_V_1_fu_886_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_897_p2;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<32> > y_1_fu_908_p2;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_predicate_tran27to28_state26;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state31;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter3;
    sc_signal< sc_lv<30> > ap_phi_mux_indvar_phi_fu_312_p4;
    sc_signal< sc_lv<64> > indvar_flatten1_reg_320;
    sc_signal< sc_lv<32> > x_reg_331;
    sc_signal< sc_lv<32> > y_reg_342;
    sc_signal< sc_lv<12> > ap_phi_mux_i_i_phi_fu_357_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_x_i_phi_fu_379_p4;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<64> > indvar1_fu_476_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_563_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_577_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_588_p1;
    sc_signal< sc_lv<64> > tmp_20_i_fu_630_p1;
    sc_signal< sc_lv<64> > tmp_22_i_fu_640_p1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<64> > tmp_24_i_fu_650_p1;
    sc_signal< sc_lv<64> > tmp_i1_fu_727_p1;
    sc_signal< sc_lv<64> > tmp_3_i_fu_752_p1;
    sc_signal< sc_lv<64> > tmp_5_i_fu_763_p1;
    sc_signal< sc_lv<64> > tmp_32_i_fu_830_p1;
    sc_signal< sc_lv<64> > tmp_33_i_fu_843_p1;
    sc_signal< sc_lv<64> > tmp_1_fu_451_p1;
    sc_signal< sc_logic > ap_reg_ioackin_MAXI_ARREADY;
    sc_signal< sc_lv<12> > tmp_6_i_fu_732_p2;
    sc_signal< sc_lv<12> > p_0115_1_fu_132;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > tmp_8_fu_431_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > grp_fu_443_p2;
    sc_signal< sc_lv<32> > grp_fu_496_p0;
    sc_signal< sc_lv<32> > grp_fu_496_p1;
    sc_signal< sc_lv<1> > exitcond1_fu_518_p2;
    sc_signal< sc_lv<32> > x_s_fu_531_p2;
    sc_signal< sc_lv<13> > tmp_15_fu_553_p2;
    sc_signal< sc_lv<14> > lhs_V_cast_fu_568_p1;
    sc_signal< sc_lv<14> > r_V_fu_571_p2;
    sc_signal< sc_lv<14> > r_V_1_fu_582_p2;
    sc_signal< sc_lv<14> > p_shl_i_fu_612_p3;
    sc_signal< sc_lv<15> > p_shl_i_cast_fu_620_p1;
    sc_signal< sc_lv<15> > i_i_cast6_fu_608_p1;
    sc_signal< sc_lv<15> > tmp_21_i_fu_635_p2;
    sc_signal< sc_lv<15> > tmp_23_i_fu_645_p2;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< sc_lv<1> > tmp_i_i_4_fu_660_p2;
    sc_signal< sc_lv<1> > tmp_35_i_i_fu_665_p2;
    sc_signal< sc_lv<1> > tmp1_fu_670_p2;
    sc_signal< sc_lv<32> > tmp_17_fu_686_p2;
    sc_signal< sc_lv<32> > tmp_16_fu_681_p2;
    sc_signal< sc_lv<32> > tmp2_fu_691_p2;
    sc_signal< sc_lv<14> > p_shl_i1_fu_706_p3;
    sc_signal< sc_lv<15> > p_shl_i1_cast_fu_713_p1;
    sc_signal< sc_lv<15> > lhs_V_1_cast4_fu_703_p1;
    sc_signal< sc_lv<15> > r_V_2_fu_717_p2;
    sc_signal< sc_lv<45> > lhs_V_fu_743_p1;
    sc_signal< sc_lv<45> > r_V_3_fu_746_p2;
    sc_signal< sc_lv<45> > r_V_4_fu_757_p2;
    sc_signal< sc_lv<1> > exitcond2_fu_779_p2;
    sc_signal< sc_lv<32> > x_1_fu_792_p2;
    sc_signal< sc_lv<32> > y_i_mid2_fu_784_p3;
    sc_signal< sc_lv<13> > grp_fu_918_p3;
    sc_signal< sc_lv<13> > tmp_20_fu_820_p2;
    sc_signal< sc_lv<14> > lhs_V_3_cast_fu_834_p1;
    sc_signal< sc_lv<14> > r_V_5_fu_837_p2;
    sc_signal< sc_lv<1> > tmp3_fu_863_p2;
    sc_signal< sc_lv<1> > val_assign_1_fu_867_p2;
    sc_signal< sc_lv<12> > result_V_fu_872_p2;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< bool > ap_block_state38;
    sc_signal< sc_lv<31> > ap_NS_fsm;
    sc_signal< sc_lv<2> > ap_exit_tran_regpp1;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_lv<64> > grp_fu_496_p00;
    sc_signal< sc_lv<64> > grp_fu_496_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<31> ap_ST_fsm_state1;
    static const sc_lv<31> ap_ST_fsm_state2;
    static const sc_lv<31> ap_ST_fsm_state3;
    static const sc_lv<31> ap_ST_fsm_state4;
    static const sc_lv<31> ap_ST_fsm_state5;
    static const sc_lv<31> ap_ST_fsm_state6;
    static const sc_lv<31> ap_ST_fsm_state7;
    static const sc_lv<31> ap_ST_fsm_state8;
    static const sc_lv<31> ap_ST_fsm_state9;
    static const sc_lv<31> ap_ST_fsm_state10;
    static const sc_lv<31> ap_ST_fsm_state11;
    static const sc_lv<31> ap_ST_fsm_state12;
    static const sc_lv<31> ap_ST_fsm_pp0_stage0;
    static const sc_lv<31> ap_ST_fsm_state16;
    static const sc_lv<31> ap_ST_fsm_state17;
    static const sc_lv<31> ap_ST_fsm_state18;
    static const sc_lv<31> ap_ST_fsm_state19;
    static const sc_lv<31> ap_ST_fsm_state20;
    static const sc_lv<31> ap_ST_fsm_state21;
    static const sc_lv<31> ap_ST_fsm_state22;
    static const sc_lv<31> ap_ST_fsm_state23;
    static const sc_lv<31> ap_ST_fsm_pp1_stage0;
    static const sc_lv<31> ap_ST_fsm_pp1_stage1;
    static const sc_lv<31> ap_ST_fsm_pp1_stage2;
    static const sc_lv<31> ap_ST_fsm_state28;
    static const sc_lv<31> ap_ST_fsm_state29;
    static const sc_lv<31> ap_ST_fsm_state30;
    static const sc_lv<31> ap_ST_fsm_pp2_stage0;
    static const sc_lv<31> ap_ST_fsm_state36;
    static const sc_lv<31> ap_ST_fsm_state37;
    static const sc_lv<31> ap_ST_fsm_state38;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_MAXI_USER_VALUE;
    static const int C_M_AXI_MAXI_PROT_VALUE;
    static const int C_M_AXI_MAXI_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<30> ap_const_lv30_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<30> ap_const_lv30_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<13> ap_const_lv13_2;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<14> ap_const_lv14_2;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<15> ap_const_lv15_2;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<45> ap_const_lv45_1;
    static const sc_lv<45> ap_const_lv45_2;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_clk_no_reset_();
    void thread_MAXI_ARADDR();
    void thread_MAXI_ARLEN();
    void thread_MAXI_ARVALID();
    void thread_MAXI_RREADY();
    void thread_MAXI_blk_n_AR();
    void thread_MAXI_blk_n_R();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state13_pp0_stage0_iter0();
    void thread_ap_block_state14_pp0_stage0_iter1();
    void thread_ap_block_state15_pp0_stage0_iter2();
    void thread_ap_block_state24_pp1_stage0_iter0();
    void thread_ap_block_state25_pp1_stage1_iter0();
    void thread_ap_block_state26_pp1_stage2_iter0();
    void thread_ap_block_state27_pp1_stage0_iter1();
    void thread_ap_block_state31_pp2_stage0_iter0();
    void thread_ap_block_state32_pp2_stage0_iter1();
    void thread_ap_block_state33_pp2_stage0_iter2();
    void thread_ap_block_state34_pp2_stage0_iter3();
    void thread_ap_block_state35_pp2_stage0_iter4();
    void thread_ap_block_state38();
    void thread_ap_condition_pp0_exit_iter0_state13();
    void thread_ap_condition_pp2_exit_iter0_state31();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_i_i_phi_fu_357_p4();
    void thread_ap_phi_mux_indvar_phi_fu_312_p4();
    void thread_ap_phi_mux_x_i_phi_fu_379_p4();
    void thread_ap_predicate_tran27to28_state26();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_MAXI_ARREADY();
    void thread_b_1_ack_in();
    void thread_b_1_vld_in();
    void thread_current_V_1_fu_825_p2();
    void thread_current_V_fu_558_p2();
    void thread_exitcond1_fu_518_p2();
    void thread_exitcond2_fu_779_p2();
    void thread_exitcond_flatten1_fu_507_p2();
    void thread_exitcond_flatten_fu_768_p2();
    void thread_exitcond_fu_465_p2();
    void thread_g_1_ack_in();
    void thread_g_1_vld_in();
    void thread_grp_fu_496_p0();
    void thread_grp_fu_496_p00();
    void thread_grp_fu_496_p1();
    void thread_grp_fu_496_p10();
    void thread_height_0_ack_out();
    void thread_i_fu_602_p2();
    void thread_i_i_cast6_fu_608_p1();
    void thread_indvar1_fu_476_p1();
    void thread_indvar_flatten_next1_fu_512_p2();
    void thread_indvar_flatten_next_fu_773_p2();
    void thread_indvar_next_fu_470_p2();
    void thread_length_r_0_ack_out();
    void thread_lhs_V_1_cast4_fu_703_p1();
    void thread_lhs_V_3_cast_fu_834_p1();
    void thread_lhs_V_cast_fu_568_p1();
    void thread_lhs_V_fu_743_p1();
    void thread_p_shl_i1_cast_fu_713_p1();
    void thread_p_shl_i1_fu_706_p3();
    void thread_p_shl_i_cast_fu_620_p1();
    void thread_p_shl_i_fu_612_p3();
    void thread_r_1_ack_in();
    void thread_r_1_vld_in();
    void thread_r_V_1_fu_582_p2();
    void thread_r_V_2_cast_fu_723_p1();
    void thread_r_V_2_fu_717_p2();
    void thread_r_V_3_fu_746_p2();
    void thread_r_V_4_fu_757_p2();
    void thread_r_V_5_fu_837_p2();
    void thread_r_V_fu_571_p2();
    void thread_result_V_fu_872_p2();
    void thread_sectionData_address0();
    void thread_sectionData_address1();
    void thread_sectionData_ce0();
    void thread_sectionData_ce1();
    void thread_sectionData_we0();
    void thread_tmp1_fu_670_p2();
    void thread_tmp2_fu_691_p2();
    void thread_tmp3_fu_863_p2();
    void thread_tmp_10_fu_487_p1();
    void thread_tmp_11_fu_545_p1();
    void thread_tmp_12_fu_697_p2();
    void thread_tmp_13_fu_897_p2();
    void thread_tmp_14_fu_549_p1();
    void thread_tmp_15_fu_553_p2();
    void thread_tmp_16_fu_681_p2();
    void thread_tmp_17_fu_686_p2();
    void thread_tmp_18_fu_806_p1();
    void thread_tmp_19_fu_810_p1();
    void thread_tmp_19_i_fu_624_p2();
    void thread_tmp_1_fu_451_p1();
    void thread_tmp_20_fu_820_p2();
    void thread_tmp_20_i_fu_630_p1();
    void thread_tmp_21_i_fu_635_p2();
    void thread_tmp_22_i_fu_640_p1();
    void thread_tmp_23_i_fu_645_p2();
    void thread_tmp_24_i_fu_650_p1();
    void thread_tmp_27_i_mid2_v_fu_798_p3();
    void thread_tmp_32_i_fu_830_p1();
    void thread_tmp_33_i_fu_843_p1();
    void thread_tmp_34_agg_result_V_1_fu_886_p3();
    void thread_tmp_34_agg_result_V_s_fu_878_p3();
    void thread_tmp_35_i_i1_fu_858_p2();
    void thread_tmp_35_i_i_fu_665_p2();
    void thread_tmp_3_i_fu_752_p1();
    void thread_tmp_5_fu_577_p1();
    void thread_tmp_5_i_fu_763_p1();
    void thread_tmp_6_fu_563_p1();
    void thread_tmp_6_i_fu_732_p2();
    void thread_tmp_8_fu_431_p2();
    void thread_tmp_9_fu_447_p1();
    void thread_tmp_fu_437_p2();
    void thread_tmp_i1_fu_727_p1();
    void thread_tmp_i_fu_597_p2();
    void thread_tmp_i_i1_5_fu_853_p2();
    void thread_tmp_i_i1_fu_848_p2();
    void thread_tmp_i_i_4_fu_660_p2();
    void thread_tmp_i_i_fu_655_p2();
    void thread_tmp_s_fu_588_p1();
    void thread_val_assign_1_fu_867_p2();
    void thread_val_assign_fu_676_p2();
    void thread_version_1_ack_in();
    void thread_version_1_data_in();
    void thread_version_1_vld_in();
    void thread_visited_address0();
    void thread_visited_address1();
    void thread_visited_ce0();
    void thread_visited_ce1();
    void thread_visited_d1();
    void thread_visited_we0();
    void thread_visited_we1();
    void thread_x_1_fu_792_p2();
    void thread_x_cast_mid2_v_fu_537_p3();
    void thread_x_s_fu_531_p2();
    void thread_y_1_fu_908_p2();
    void thread_y_2_fu_814_p2();
    void thread_y_i_mid2_fu_784_p3();
    void thread_y_mid2_fu_523_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
