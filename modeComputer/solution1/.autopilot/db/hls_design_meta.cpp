#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_MAXI_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MAXI_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MAXI_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_MAXI_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MAXI_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_MAXI_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_MAXI_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_MAXI_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_MAXI_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_MAXI_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_MAXI_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_MAXI_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_MAXI_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MAXI_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MAXI_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MAXI_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_MAXI_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_MAXI_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_MAXI_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MAXI_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MAXI_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MAXI_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MAXI_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_MAXI_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MAXI_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_MAXI_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_MAXI_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_MAXI_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_MAXI_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_MAXI_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_MAXI_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_MAXI_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_MAXI_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MAXI_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MAXI_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MAXI_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_MAXI_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_MAXI_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MAXI_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_MAXI_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_MAXI_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_MAXI_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_MAXI_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_MAXI_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_MAXI_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "toplevel";
