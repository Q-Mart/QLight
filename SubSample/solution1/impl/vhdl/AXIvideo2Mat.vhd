-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIvideo2Mat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_0_V_full_n : IN STD_LOGIC;
    img_data_stream_0_V_write : OUT STD_LOGIC;
    img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_1_V_full_n : IN STD_LOGIC;
    img_data_stream_1_V_write : OUT STD_LOGIC;
    img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_2_V_full_n : IN STD_LOGIC;
    img_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of AXIvideo2Mat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_41A : STD_LOGIC_VECTOR (10 downto 0) := "10000011010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_690 : STD_LOGIC_VECTOR (10 downto 0) := "11010010000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_eol_2_phi_fu_295_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_412 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_data_stream_1_V_blk_n : STD_LOGIC;
    signal img_data_stream_2_V_blk_n : STD_LOGIC;
    signal eol_1_reg_198 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_reg_209 : STD_LOGIC_VECTOR (23 downto 0);
    signal t_V_3_reg_220 : STD_LOGIC_VECTOR (10 downto 0);
    signal eol_reg_231 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_reg_243 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_256 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_data_V_reg_383 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_last_V_reg_391 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_327_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_407 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_predicate_op50_read_state5 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_V_fu_339_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_96_fu_354_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_reg_425 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_430 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_reg_435 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal axi_last_V_3_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_reg_167 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_data_V_3_reg_280 : STD_LOGIC_VECTOR (23 downto 0);
    signal axi_data_V1_reg_177 : STD_LOGIC_VECTOR (23 downto 0);
    signal t_V_reg_187 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_eol_1_phi_fu_201_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_axi_data_V_1_phi_fu_212_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_eol_phi_fu_235_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_260_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_p_Val2_s_reg_256 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal eol_2_reg_292 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sof_1_fu_124 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_312_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_225 : BOOLEAN;
    signal ap_condition_145 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axi_data_V1_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_data_V1_reg_177 <= tmp_data_V_reg_383;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_data_V1_reg_177 <= axi_data_V_3_reg_280;
            end if; 
        end if;
    end process;

    axi_data_V_1_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                axi_data_V_1_reg_209 <= p_Val2_s_reg_256;
            elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                axi_data_V_1_reg_209 <= axi_data_V1_reg_177;
            end if; 
        end if;
    end process;

    axi_data_V_3_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_data_V_3_reg_280 <= axi_data_V_1_reg_209;
            elsif ((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_data_V_3_reg_280 <= stream_in_TDATA;
            end if; 
        end if;
    end process;

    axi_last_V1_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                axi_last_V1_reg_167 <= tmp_last_V_reg_391;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                axi_last_V1_reg_167 <= axi_last_V_3_reg_268;
            end if; 
        end if;
    end process;

    axi_last_V_2_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_145)) then
                if (((brmerge_fu_348_p2 = ap_const_lv1_1) and (exitcond_fu_333_p2 = ap_const_lv1_0))) then 
                    axi_last_V_2_reg_243 <= ap_phi_mux_eol_1_phi_fu_201_p4;
                elsif (((brmerge_fu_348_p2 = ap_const_lv1_0) and (exitcond_fu_333_p2 = ap_const_lv1_0))) then 
                    axi_last_V_2_reg_243 <= stream_in_TLAST;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    axi_last_V_2_reg_243 <= ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243;
                end if;
            end if; 
        end if;
    end process;

    axi_last_V_3_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                axi_last_V_3_reg_268 <= eol_1_reg_198;
            elsif ((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                axi_last_V_3_reg_268 <= stream_in_TLAST;
            end if; 
        end if;
    end process;

    eol_1_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_1_reg_198 <= axi_last_V_2_reg_243;
            elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_1_reg_198 <= axi_last_V1_reg_167;
            end if; 
        end if;
    end process;

    eol_2_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                eol_2_reg_292 <= eol_reg_231;
            elsif ((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                eol_2_reg_292 <= stream_in_TLAST;
            end if; 
        end if;
    end process;

    eol_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                eol_reg_231 <= axi_last_V_2_reg_243;
            elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                eol_reg_231 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_145)) then
                if (((brmerge_fu_348_p2 = ap_const_lv1_1) and (exitcond_fu_333_p2 = ap_const_lv1_0))) then 
                    p_Val2_s_reg_256 <= ap_phi_mux_axi_data_V_1_phi_fu_212_p4;
                elsif (((brmerge_fu_348_p2 = ap_const_lv1_0) and (exitcond_fu_333_p2 = ap_const_lv1_0))) then 
                    p_Val2_s_reg_256 <= stream_in_TDATA;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    p_Val2_s_reg_256 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_256;
                end if;
            end if; 
        end if;
    end process;

    sof_1_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_333_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                sof_1_fu_124 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                sof_1_fu_124 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    t_V_3_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_333_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_3_reg_220 <= j_V_fu_339_p2;
            elsif (((exitcond6_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                t_V_3_reg_220 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_reg_187 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_187 <= i_V_reg_407;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_412 <= exitcond_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_407 <= i_V_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_333_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_32_reg_430 <= ap_phi_mux_p_Val2_s_phi_fu_260_p4(15 downto 8);
                tmp_33_reg_435 <= ap_phi_mux_p_Val2_s_phi_fu_260_p4(23 downto 16);
                tmp_96_reg_425 <= tmp_96_fu_354_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((stream_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_data_V_reg_383 <= stream_in_TDATA;
                tmp_last_V_reg_391 <= stream_in_TLAST;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, stream_in_TVALID, ap_CS_fsm_state2, ap_enable_reg_pp1_iter0, exitcond_fu_333_p2, ap_CS_fsm_state8, ap_phi_mux_eol_2_phi_fu_295_p4, exitcond6_fu_321_p2, ap_CS_fsm_state4, ap_block_pp1_stage0_subdone, eol_2_reg_292, tmp_user_V_fu_312_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_user_V_fu_312_p1 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((stream_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_user_V_fu_312_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_321_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((exitcond_fu_333_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((exitcond_fu_333_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if ((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif ((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (ap_phi_mux_eol_2_phi_fu_295_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(stream_in_TVALID, img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, img_data_stream_2_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_predicate_op50_read_state5)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_2_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_0_V_full_n = ap_const_logic_0)))) or ((stream_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op50_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(stream_in_TVALID, img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, img_data_stream_2_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_predicate_op50_read_state5)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_2_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_0_V_full_n = ap_const_logic_0)))) or ((stream_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op50_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(stream_in_TVALID, img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, img_data_stream_2_V_full_n, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_predicate_op50_read_state5)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_2_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_0_V_full_n = ap_const_logic_0)))) or ((stream_in_TVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_predicate_op50_read_state5 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp1_stage0_iter0_assign_proc : process(stream_in_TVALID, ap_predicate_op50_read_state5)
    begin
                ap_block_state5_pp1_stage0_iter0 <= ((stream_in_TVALID = ap_const_logic_0) and (ap_predicate_op50_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp1_stage0_iter1_assign_proc : process(img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, img_data_stream_2_V_full_n, exitcond_reg_412)
    begin
                ap_block_state6_pp1_stage0_iter1 <= (((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_2_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)) or ((exitcond_reg_412 = ap_const_lv1_0) and (img_data_stream_0_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state8_assign_proc : process(stream_in_TVALID, eol_2_reg_292)
    begin
                ap_block_state8 <= ((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0));
    end process;


    ap_condition_145_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001)
    begin
                ap_condition_145 <= ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_225_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, exitcond_fu_333_p2)
    begin
                ap_condition_225 <= ((exitcond_fu_333_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp1_exit_iter0_state5_assign_proc : process(exitcond_fu_333_p2)
    begin
        if ((exitcond_fu_333_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond6_fu_321_p2, ap_CS_fsm_state4)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_321_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_axi_data_V_1_phi_fu_212_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, axi_data_V_1_reg_209, p_Val2_s_reg_256)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_axi_data_V_1_phi_fu_212_p4 <= p_Val2_s_reg_256;
        else 
            ap_phi_mux_axi_data_V_1_phi_fu_212_p4 <= axi_data_V_1_reg_209;
        end if; 
    end process;


    ap_phi_mux_eol_1_phi_fu_201_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, eol_1_reg_198, axi_last_V_2_reg_243)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_eol_1_phi_fu_201_p4 <= axi_last_V_2_reg_243;
        else 
            ap_phi_mux_eol_1_phi_fu_201_p4 <= eol_1_reg_198;
        end if; 
    end process;

    ap_phi_mux_eol_2_phi_fu_295_p4 <= eol_2_reg_292;

    ap_phi_mux_eol_phi_fu_235_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, eol_reg_231, axi_last_V_2_reg_243)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_eol_phi_fu_235_p4 <= axi_last_V_2_reg_243;
        else 
            ap_phi_mux_eol_phi_fu_235_p4 <= eol_reg_231;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_260_p4_assign_proc : process(stream_in_TDATA, brmerge_fu_348_p2, ap_phi_mux_axi_data_V_1_phi_fu_212_p4, ap_phi_reg_pp1_iter0_p_Val2_s_reg_256, ap_condition_225)
    begin
        if ((ap_const_boolean_1 = ap_condition_225)) then
            if ((brmerge_fu_348_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_p_Val2_s_phi_fu_260_p4 <= ap_phi_mux_axi_data_V_1_phi_fu_212_p4;
            elsif ((brmerge_fu_348_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_p_Val2_s_phi_fu_260_p4 <= stream_in_TDATA;
            else 
                ap_phi_mux_p_Val2_s_phi_fu_260_p4 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_256;
            end if;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_260_p4 <= ap_phi_reg_pp1_iter0_p_Val2_s_reg_256;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243 <= "X";
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_256 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op50_read_state5_assign_proc : process(exitcond_fu_333_p2, brmerge_fu_348_p2)
    begin
                ap_predicate_op50_read_state5 <= ((brmerge_fu_348_p2 = ap_const_lv1_0) and (exitcond_fu_333_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond6_fu_321_p2, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond6_fu_321_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_348_p2 <= (sof_1_fu_124 or ap_phi_mux_eol_phi_fu_235_p4);
    exitcond6_fu_321_p2 <= "1" when (t_V_reg_187 = ap_const_lv11_41A) else "0";
    exitcond_fu_333_p2 <= "1" when (t_V_3_reg_220 = ap_const_lv11_690) else "0";
    i_V_fu_327_p2 <= std_logic_vector(unsigned(t_V_reg_187) + unsigned(ap_const_lv11_1));

    img_data_stream_0_V_blk_n_assign_proc : process(img_data_stream_0_V_full_n, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_data_stream_0_V_blk_n <= img_data_stream_0_V_full_n;
        else 
            img_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_data_stream_0_V_din <= tmp_96_reg_425;

    img_data_stream_0_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_1_V_blk_n_assign_proc : process(img_data_stream_1_V_full_n, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_data_stream_1_V_blk_n <= img_data_stream_1_V_full_n;
        else 
            img_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_data_stream_1_V_din <= tmp_32_reg_430;

    img_data_stream_1_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_2_V_blk_n_assign_proc : process(img_data_stream_2_V_full_n, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            img_data_stream_2_V_blk_n <= img_data_stream_2_V_full_n;
        else 
            img_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_data_stream_2_V_din <= tmp_33_reg_435;

    img_data_stream_2_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond_reg_412, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_412 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_339_p2 <= std_logic_vector(unsigned(t_V_3_reg_220) + unsigned(ap_const_lv11_1));

    stream_in_TDATA_blk_n_assign_proc : process(stream_in_TVALID, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, exitcond_fu_333_p2, brmerge_fu_348_p2, ap_CS_fsm_state8, eol_2_reg_292)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((brmerge_fu_348_p2 = ap_const_lv1_0) and (exitcond_fu_333_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_TDATA_blk_n <= stream_in_TVALID;
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_TREADY_assign_proc : process(stream_in_TVALID, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_state8, ap_predicate_op50_read_state5, ap_block_pp1_stage0_11001, eol_2_reg_292)
    begin
        if (((not(((eol_2_reg_292 = ap_const_lv1_0) and (stream_in_TVALID = ap_const_logic_0))) and (eol_2_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op50_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((stream_in_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            stream_in_TREADY <= ap_const_logic_1;
        else 
            stream_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    tmp_96_fu_354_p1 <= ap_phi_mux_p_Val2_s_phi_fu_260_p4(8 - 1 downto 0);
    tmp_user_V_fu_312_p1 <= stream_in_TUSER;
end behav;
