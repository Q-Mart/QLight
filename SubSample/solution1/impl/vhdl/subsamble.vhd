-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity subsamble is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_process_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_process_TVALID : OUT STD_LOGIC;
    stream_process_TREADY : IN STD_LOGIC;
    stream_process_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_process_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_process_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_process_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_process_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_process_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_passThrough_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_passThrough_TVALID : OUT STD_LOGIC;
    stream_passThrough_TREADY : IN STD_LOGIC;
    stream_passThrough_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_passThrough_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    stream_passThrough_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_passThrough_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_passThrough_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_passThrough_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of subsamble is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "subsamble,hls_ip_2018_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=10615742,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=3,HLS_SYN_FF=1641,HLS_SYN_LUT=4119,HLS_VERSION=2018_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv11_41A : STD_LOGIC_VECTOR (10 downto 0) := "10000011010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_690 : STD_LOGIC_VECTOR (10 downto 0) := "11010010000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_V_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel : STD_LOGIC;
    signal stream_in_V_data_V_0_load_A : STD_LOGIC;
    signal stream_in_V_data_V_0_load_B : STD_LOGIC;
    signal stream_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_keep_V_0_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_keep_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_A : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_B : STD_LOGIC;
    signal stream_in_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_strb_V_0_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_strb_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_in_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_A : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_B : STD_LOGIC;
    signal stream_in_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_user_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel : STD_LOGIC;
    signal stream_in_V_user_V_0_load_A : STD_LOGIC;
    signal stream_in_V_user_V_0_load_B : STD_LOGIC;
    signal stream_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_last_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel : STD_LOGIC;
    signal stream_in_V_last_V_0_load_A : STD_LOGIC;
    signal stream_in_V_last_V_0_load_B : STD_LOGIC;
    signal stream_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_id_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_id_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel : STD_LOGIC;
    signal stream_in_V_id_V_0_load_A : STD_LOGIC;
    signal stream_in_V_id_V_0_load_B : STD_LOGIC;
    signal stream_in_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_A : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_B : STD_LOGIC;
    signal stream_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal stream_process_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_process_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_process_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_process_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_data_V_1_sel : STD_LOGIC;
    signal stream_process_V_data_V_1_load_A : STD_LOGIC;
    signal stream_process_V_data_V_1_load_B : STD_LOGIC;
    signal stream_process_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_keep_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_keep_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_keep_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_keep_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_keep_V_1_sel : STD_LOGIC;
    signal stream_process_V_keep_V_1_load_A : STD_LOGIC;
    signal stream_process_V_keep_V_1_load_B : STD_LOGIC;
    signal stream_process_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_strb_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_strb_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_strb_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_strb_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_process_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_strb_V_1_sel : STD_LOGIC;
    signal stream_process_V_strb_V_1_load_A : STD_LOGIC;
    signal stream_process_V_strb_V_1_load_B : STD_LOGIC;
    signal stream_process_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_user_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_user_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_user_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_user_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_user_V_1_sel : STD_LOGIC;
    signal stream_process_V_user_V_1_load_A : STD_LOGIC;
    signal stream_process_V_user_V_1_load_B : STD_LOGIC;
    signal stream_process_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_last_V_1_sel : STD_LOGIC;
    signal stream_process_V_last_V_1_load_A : STD_LOGIC;
    signal stream_process_V_last_V_1_load_B : STD_LOGIC;
    signal stream_process_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_id_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_id_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_id_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_id_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_id_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_id_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_id_V_1_sel : STD_LOGIC;
    signal stream_process_V_id_V_1_load_A : STD_LOGIC;
    signal stream_process_V_id_V_1_load_B : STD_LOGIC;
    signal stream_process_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal stream_process_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_process_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_process_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_process_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_process_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_process_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_process_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_process_V_dest_V_1_sel : STD_LOGIC;
    signal stream_process_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_process_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_process_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_process_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_passThrough_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_passThrough_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal stream_passThrough_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_data_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_keep_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_keep_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_strb_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (2 downto 0);
    signal stream_passThrough_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_strb_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_user_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_user_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_user_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_last_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_id_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_id_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_id_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_passThrough_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_passThrough_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_passThrough_V_dest_V_1_sel : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_passThrough_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_passThrough_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal t_V_1_reg_582 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_i_reg_604 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond5_i_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i_V_fu_704_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_V_reg_858 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_i_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_863 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal img0_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img0_data_stream_0_s_empty_n : STD_LOGIC;
    signal img0_data_stream_0_s_read : STD_LOGIC;
    signal img0_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img0_data_stream_1_s_empty_n : STD_LOGIC;
    signal img0_data_stream_1_s_read : STD_LOGIC;
    signal img0_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img0_data_stream_2_s_empty_n : STD_LOGIC;
    signal img0_data_stream_2_s_read : STD_LOGIC;
    signal img1_data_stream_0_s_full_n : STD_LOGIC;
    signal img1_data_stream_0_s_write : STD_LOGIC;
    signal img1_data_stream_1_s_full_n : STD_LOGIC;
    signal img1_data_stream_1_s_write : STD_LOGIC;
    signal img1_data_stream_2_s_full_n : STD_LOGIC;
    signal img1_data_stream_2_s_write : STD_LOGIC;
    signal imgDuplicate_data_st_full_n : STD_LOGIC;
    signal imgDuplicate_data_st_write : STD_LOGIC;
    signal imgDuplicate_data_st_1_full_n : STD_LOGIC;
    signal imgDuplicate_data_st_1_write : STD_LOGIC;
    signal imgDuplicate_data_st_2_full_n : STD_LOGIC;
    signal imgDuplicate_data_st_2_write : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_V_fu_716_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond1_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_fu_728_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_876 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_881 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state12_pp1_stage0_iter0 : BOOLEAN;
    signal img3_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img3_data_stream_0_s_empty_n : STD_LOGIC;
    signal img3_data_stream_0_s_read : STD_LOGIC;
    signal img3_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img3_data_stream_1_s_empty_n : STD_LOGIC;
    signal img3_data_stream_1_s_read : STD_LOGIC;
    signal img3_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img3_data_stream_2_s_empty_n : STD_LOGIC;
    signal img3_data_stream_2_s_read : STD_LOGIC;
    signal img4_data_stream_0_s_full_n : STD_LOGIC;
    signal img4_data_stream_0_s_write : STD_LOGIC;
    signal img4_data_stream_1_s_full_n : STD_LOGIC;
    signal img4_data_stream_1_s_write : STD_LOGIC;
    signal img4_data_stream_2_s_full_n : STD_LOGIC;
    signal img4_data_stream_2_s_write : STD_LOGIC;
    signal ap_block_state13_pp1_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_fu_740_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state12 : STD_LOGIC;
    signal grp_Filter2D_fu_615_ap_start : STD_LOGIC;
    signal grp_Filter2D_fu_615_ap_done : STD_LOGIC;
    signal grp_Filter2D_fu_615_ap_idle : STD_LOGIC;
    signal grp_Filter2D_fu_615_ap_ready : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Filter2D_fu_615_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Filter2D_fu_615_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_Filter2D_fu_615_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Filter2D_fu_615_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_ap_start : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_ap_done : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_ap_idle : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_ap_ready : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_stream_in_TVALID : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_stream_in_TREADY : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_write : STD_LOGIC;
    signal grp_CvtColor_fu_646_ap_start : STD_LOGIC;
    signal grp_CvtColor_fu_646_ap_done : STD_LOGIC;
    signal grp_CvtColor_fu_646_ap_idle : STD_LOGIC;
    signal grp_CvtColor_fu_646_ap_ready : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_CvtColor_fu_646_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_CvtColor_fu_646_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_CvtColor_fu_646_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_CvtColor_fu_646_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_ap_start : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_ap_done : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_ap_idle : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_ap_ready : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_img_data_stream_0_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_img_data_stream_1_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_img_data_stream_2_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TREADY : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_656_stream_passThrough_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_677_ap_start : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_ap_done : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_ap_idle : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_ap_ready : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_img_data_stream_0_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_img_data_stream_1_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_img_data_stream_2_V_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TREADY : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mat2AXIvideo_fu_677_stream_passThrough_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_reg_571 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_i_reg_593 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_Filter2D_fu_615_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal img2_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img2_data_stream_0_s_empty_n : STD_LOGIC;
    signal img2_data_stream_0_s_read : STD_LOGIC;
    signal img2_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img2_data_stream_1_s_empty_n : STD_LOGIC;
    signal img2_data_stream_1_s_read : STD_LOGIC;
    signal img2_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img2_data_stream_2_s_empty_n : STD_LOGIC;
    signal img2_data_stream_2_s_read : STD_LOGIC;
    signal img3_data_stream_0_s_full_n : STD_LOGIC;
    signal img3_data_stream_0_s_write : STD_LOGIC;
    signal img3_data_stream_1_s_full_n : STD_LOGIC;
    signal img3_data_stream_1_s_write : STD_LOGIC;
    signal img3_data_stream_2_s_full_n : STD_LOGIC;
    signal img3_data_stream_2_s_write : STD_LOGIC;
    signal grp_AXIvideo2Mat_fu_625_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal img0_data_stream_0_s_full_n : STD_LOGIC;
    signal img0_data_stream_0_s_write : STD_LOGIC;
    signal img0_data_stream_1_s_full_n : STD_LOGIC;
    signal img0_data_stream_1_s_write : STD_LOGIC;
    signal img0_data_stream_2_s_full_n : STD_LOGIC;
    signal img0_data_stream_2_s_write : STD_LOGIC;
    signal grp_CvtColor_fu_646_ap_start_reg : STD_LOGIC := '0';
    signal img1_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img1_data_stream_0_s_empty_n : STD_LOGIC;
    signal img1_data_stream_0_s_read : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal img1_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img1_data_stream_1_s_empty_n : STD_LOGIC;
    signal img1_data_stream_1_s_read : STD_LOGIC;
    signal img1_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img1_data_stream_2_s_empty_n : STD_LOGIC;
    signal img1_data_stream_2_s_read : STD_LOGIC;
    signal img2_data_stream_0_s_full_n : STD_LOGIC;
    signal img2_data_stream_0_s_write : STD_LOGIC;
    signal img2_data_stream_1_s_full_n : STD_LOGIC;
    signal img2_data_stream_1_s_write : STD_LOGIC;
    signal img2_data_stream_2_s_full_n : STD_LOGIC;
    signal img2_data_stream_2_s_write : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_656_ap_start_reg : STD_LOGIC := '0';
    signal img4_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img4_data_stream_0_s_empty_n : STD_LOGIC;
    signal img4_data_stream_0_s_read : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal img4_data_stream_1_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img4_data_stream_1_s_empty_n : STD_LOGIC;
    signal img4_data_stream_1_s_read : STD_LOGIC;
    signal img4_data_stream_2_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img4_data_stream_2_s_empty_n : STD_LOGIC;
    signal img4_data_stream_2_s_read : STD_LOGIC;
    signal grp_Mat2AXIvideo_fu_677_ap_start_reg : STD_LOGIC := '0';
    signal imgDuplicate_data_st_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgDuplicate_data_st_empty_n : STD_LOGIC;
    signal imgDuplicate_data_st_read : STD_LOGIC;
    signal imgDuplicate_data_st_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgDuplicate_data_st_1_empty_n : STD_LOGIC;
    signal imgDuplicate_data_st_1_read : STD_LOGIC;
    signal imgDuplicate_data_st_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal imgDuplicate_data_st_2_empty_n : STD_LOGIC;
    signal imgDuplicate_data_st_2_read : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_state16 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component Filter2D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        stream_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        stream_in_TVALID : IN STD_LOGIC;
        stream_in_TREADY : OUT STD_LOGIC;
        stream_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        stream_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_data_stream_2_V_read : OUT STD_LOGIC;
        stream_passThrough_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        stream_passThrough_TVALID : OUT STD_LOGIC;
        stream_passThrough_TREADY : IN STD_LOGIC;
        stream_passThrough_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        stream_passThrough_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        stream_passThrough_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_passThrough_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_passThrough_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        stream_passThrough_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w8_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_Filter2D_fu_615 : component Filter2D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Filter2D_fu_615_ap_start,
        ap_done => grp_Filter2D_fu_615_ap_done,
        ap_idle => grp_Filter2D_fu_615_ap_idle,
        ap_ready => grp_Filter2D_fu_615_ap_ready,
        p_src_data_stream_0_V_dout => img2_data_stream_0_s_dout,
        p_src_data_stream_0_V_empty_n => img2_data_stream_0_s_empty_n,
        p_src_data_stream_0_V_read => grp_Filter2D_fu_615_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => img2_data_stream_1_s_dout,
        p_src_data_stream_1_V_empty_n => img2_data_stream_1_s_empty_n,
        p_src_data_stream_1_V_read => grp_Filter2D_fu_615_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => img2_data_stream_2_s_dout,
        p_src_data_stream_2_V_empty_n => img2_data_stream_2_s_empty_n,
        p_src_data_stream_2_V_read => grp_Filter2D_fu_615_p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din => grp_Filter2D_fu_615_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => img3_data_stream_0_s_full_n,
        p_dst_data_stream_0_V_write => grp_Filter2D_fu_615_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => grp_Filter2D_fu_615_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => img3_data_stream_1_s_full_n,
        p_dst_data_stream_1_V_write => grp_Filter2D_fu_615_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => grp_Filter2D_fu_615_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => img3_data_stream_2_s_full_n,
        p_dst_data_stream_2_V_write => grp_Filter2D_fu_615_p_dst_data_stream_2_V_write);

    grp_AXIvideo2Mat_fu_625 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_AXIvideo2Mat_fu_625_ap_start,
        ap_done => grp_AXIvideo2Mat_fu_625_ap_done,
        ap_idle => grp_AXIvideo2Mat_fu_625_ap_idle,
        ap_ready => grp_AXIvideo2Mat_fu_625_ap_ready,
        stream_in_TDATA => stream_in_V_data_V_0_data_out,
        stream_in_TVALID => grp_AXIvideo2Mat_fu_625_stream_in_TVALID,
        stream_in_TREADY => grp_AXIvideo2Mat_fu_625_stream_in_TREADY,
        stream_in_TKEEP => stream_in_V_keep_V_0_data_out,
        stream_in_TSTRB => stream_in_V_strb_V_0_data_out,
        stream_in_TUSER => stream_in_V_user_V_0_data_out,
        stream_in_TLAST => stream_in_V_last_V_0_data_out,
        stream_in_TID => stream_in_V_id_V_0_data_out,
        stream_in_TDEST => stream_in_V_dest_V_0_data_out,
        img_data_stream_0_V_din => grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => img0_data_stream_0_s_full_n,
        img_data_stream_0_V_write => grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_write,
        img_data_stream_1_V_din => grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => img0_data_stream_1_s_full_n,
        img_data_stream_1_V_write => grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_write,
        img_data_stream_2_V_din => grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => img0_data_stream_2_s_full_n,
        img_data_stream_2_V_write => grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_write);

    grp_CvtColor_fu_646 : component CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_CvtColor_fu_646_ap_start,
        ap_done => grp_CvtColor_fu_646_ap_done,
        ap_idle => grp_CvtColor_fu_646_ap_idle,
        ap_ready => grp_CvtColor_fu_646_ap_ready,
        p_src_data_stream_0_V_dout => img1_data_stream_0_s_dout,
        p_src_data_stream_0_V_empty_n => img1_data_stream_0_s_empty_n,
        p_src_data_stream_0_V_read => grp_CvtColor_fu_646_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => img1_data_stream_1_s_dout,
        p_src_data_stream_1_V_empty_n => img1_data_stream_1_s_empty_n,
        p_src_data_stream_1_V_read => grp_CvtColor_fu_646_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => img1_data_stream_2_s_dout,
        p_src_data_stream_2_V_empty_n => img1_data_stream_2_s_empty_n,
        p_src_data_stream_2_V_read => grp_CvtColor_fu_646_p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din => grp_CvtColor_fu_646_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => img2_data_stream_0_s_full_n,
        p_dst_data_stream_0_V_write => grp_CvtColor_fu_646_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => grp_CvtColor_fu_646_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => img2_data_stream_1_s_full_n,
        p_dst_data_stream_1_V_write => grp_CvtColor_fu_646_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => grp_CvtColor_fu_646_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => img2_data_stream_2_s_full_n,
        p_dst_data_stream_2_V_write => grp_CvtColor_fu_646_p_dst_data_stream_2_V_write);

    grp_Mat2AXIvideo_fu_656 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Mat2AXIvideo_fu_656_ap_start,
        ap_done => grp_Mat2AXIvideo_fu_656_ap_done,
        ap_idle => grp_Mat2AXIvideo_fu_656_ap_idle,
        ap_ready => grp_Mat2AXIvideo_fu_656_ap_ready,
        img_data_stream_0_V_dout => img4_data_stream_0_s_dout,
        img_data_stream_0_V_empty_n => img4_data_stream_0_s_empty_n,
        img_data_stream_0_V_read => grp_Mat2AXIvideo_fu_656_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => img4_data_stream_1_s_dout,
        img_data_stream_1_V_empty_n => img4_data_stream_1_s_empty_n,
        img_data_stream_1_V_read => grp_Mat2AXIvideo_fu_656_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => img4_data_stream_2_s_dout,
        img_data_stream_2_V_empty_n => img4_data_stream_2_s_empty_n,
        img_data_stream_2_V_read => grp_Mat2AXIvideo_fu_656_img_data_stream_2_V_read,
        stream_passThrough_TDATA => grp_Mat2AXIvideo_fu_656_stream_passThrough_TDATA,
        stream_passThrough_TVALID => grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID,
        stream_passThrough_TREADY => grp_Mat2AXIvideo_fu_656_stream_passThrough_TREADY,
        stream_passThrough_TKEEP => grp_Mat2AXIvideo_fu_656_stream_passThrough_TKEEP,
        stream_passThrough_TSTRB => grp_Mat2AXIvideo_fu_656_stream_passThrough_TSTRB,
        stream_passThrough_TUSER => grp_Mat2AXIvideo_fu_656_stream_passThrough_TUSER,
        stream_passThrough_TLAST => grp_Mat2AXIvideo_fu_656_stream_passThrough_TLAST,
        stream_passThrough_TID => grp_Mat2AXIvideo_fu_656_stream_passThrough_TID,
        stream_passThrough_TDEST => grp_Mat2AXIvideo_fu_656_stream_passThrough_TDEST);

    grp_Mat2AXIvideo_fu_677 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Mat2AXIvideo_fu_677_ap_start,
        ap_done => grp_Mat2AXIvideo_fu_677_ap_done,
        ap_idle => grp_Mat2AXIvideo_fu_677_ap_idle,
        ap_ready => grp_Mat2AXIvideo_fu_677_ap_ready,
        img_data_stream_0_V_dout => imgDuplicate_data_st_dout,
        img_data_stream_0_V_empty_n => imgDuplicate_data_st_empty_n,
        img_data_stream_0_V_read => grp_Mat2AXIvideo_fu_677_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => imgDuplicate_data_st_1_dout,
        img_data_stream_1_V_empty_n => imgDuplicate_data_st_1_empty_n,
        img_data_stream_1_V_read => grp_Mat2AXIvideo_fu_677_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => imgDuplicate_data_st_2_dout,
        img_data_stream_2_V_empty_n => imgDuplicate_data_st_2_empty_n,
        img_data_stream_2_V_read => grp_Mat2AXIvideo_fu_677_img_data_stream_2_V_read,
        stream_passThrough_TDATA => grp_Mat2AXIvideo_fu_677_stream_passThrough_TDATA,
        stream_passThrough_TVALID => grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID,
        stream_passThrough_TREADY => grp_Mat2AXIvideo_fu_677_stream_passThrough_TREADY,
        stream_passThrough_TKEEP => grp_Mat2AXIvideo_fu_677_stream_passThrough_TKEEP,
        stream_passThrough_TSTRB => grp_Mat2AXIvideo_fu_677_stream_passThrough_TSTRB,
        stream_passThrough_TUSER => grp_Mat2AXIvideo_fu_677_stream_passThrough_TUSER,
        stream_passThrough_TLAST => grp_Mat2AXIvideo_fu_677_stream_passThrough_TLAST,
        stream_passThrough_TID => grp_Mat2AXIvideo_fu_677_stream_passThrough_TID,
        stream_passThrough_TDEST => grp_Mat2AXIvideo_fu_677_stream_passThrough_TDEST);

    img0_data_stream_0_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_din,
        if_full_n => img0_data_stream_0_s_full_n,
        if_write => img0_data_stream_0_s_write,
        if_dout => img0_data_stream_0_s_dout,
        if_empty_n => img0_data_stream_0_s_empty_n,
        if_read => img0_data_stream_0_s_read);

    img0_data_stream_1_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_din,
        if_full_n => img0_data_stream_1_s_full_n,
        if_write => img0_data_stream_1_s_write,
        if_dout => img0_data_stream_1_s_dout,
        if_empty_n => img0_data_stream_1_s_empty_n,
        if_read => img0_data_stream_1_s_read);

    img0_data_stream_2_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_din,
        if_full_n => img0_data_stream_2_s_full_n,
        if_write => img0_data_stream_2_s_write,
        if_dout => img0_data_stream_2_s_dout,
        if_empty_n => img0_data_stream_2_s_empty_n,
        if_read => img0_data_stream_2_s_read);

    img1_data_stream_0_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_0_s_dout,
        if_full_n => img1_data_stream_0_s_full_n,
        if_write => img1_data_stream_0_s_write,
        if_dout => img1_data_stream_0_s_dout,
        if_empty_n => img1_data_stream_0_s_empty_n,
        if_read => img1_data_stream_0_s_read);

    img1_data_stream_1_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_1_s_dout,
        if_full_n => img1_data_stream_1_s_full_n,
        if_write => img1_data_stream_1_s_write,
        if_dout => img1_data_stream_1_s_dout,
        if_empty_n => img1_data_stream_1_s_empty_n,
        if_read => img1_data_stream_1_s_read);

    img1_data_stream_2_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_2_s_dout,
        if_full_n => img1_data_stream_2_s_full_n,
        if_write => img1_data_stream_2_s_write,
        if_dout => img1_data_stream_2_s_dout,
        if_empty_n => img1_data_stream_2_s_empty_n,
        if_read => img1_data_stream_2_s_read);

    img2_data_stream_0_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_CvtColor_fu_646_p_dst_data_stream_0_V_din,
        if_full_n => img2_data_stream_0_s_full_n,
        if_write => img2_data_stream_0_s_write,
        if_dout => img2_data_stream_0_s_dout,
        if_empty_n => img2_data_stream_0_s_empty_n,
        if_read => img2_data_stream_0_s_read);

    img2_data_stream_1_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_CvtColor_fu_646_p_dst_data_stream_1_V_din,
        if_full_n => img2_data_stream_1_s_full_n,
        if_write => img2_data_stream_1_s_write,
        if_dout => img2_data_stream_1_s_dout,
        if_empty_n => img2_data_stream_1_s_empty_n,
        if_read => img2_data_stream_1_s_read);

    img2_data_stream_2_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_CvtColor_fu_646_p_dst_data_stream_2_V_din,
        if_full_n => img2_data_stream_2_s_full_n,
        if_write => img2_data_stream_2_s_write,
        if_dout => img2_data_stream_2_s_dout,
        if_empty_n => img2_data_stream_2_s_empty_n,
        if_read => img2_data_stream_2_s_read);

    img3_data_stream_0_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Filter2D_fu_615_p_dst_data_stream_0_V_din,
        if_full_n => img3_data_stream_0_s_full_n,
        if_write => img3_data_stream_0_s_write,
        if_dout => img3_data_stream_0_s_dout,
        if_empty_n => img3_data_stream_0_s_empty_n,
        if_read => img3_data_stream_0_s_read);

    img3_data_stream_1_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Filter2D_fu_615_p_dst_data_stream_1_V_din,
        if_full_n => img3_data_stream_1_s_full_n,
        if_write => img3_data_stream_1_s_write,
        if_dout => img3_data_stream_1_s_dout,
        if_empty_n => img3_data_stream_1_s_empty_n,
        if_read => img3_data_stream_1_s_read);

    img3_data_stream_2_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_Filter2D_fu_615_p_dst_data_stream_2_V_din,
        if_full_n => img3_data_stream_2_s_full_n,
        if_write => img3_data_stream_2_s_write,
        if_dout => img3_data_stream_2_s_dout,
        if_empty_n => img3_data_stream_2_s_empty_n,
        if_read => img3_data_stream_2_s_read);

    img4_data_stream_0_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img3_data_stream_0_s_dout,
        if_full_n => img4_data_stream_0_s_full_n,
        if_write => img4_data_stream_0_s_write,
        if_dout => img4_data_stream_0_s_dout,
        if_empty_n => img4_data_stream_0_s_empty_n,
        if_read => img4_data_stream_0_s_read);

    img4_data_stream_1_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img3_data_stream_0_s_dout,
        if_full_n => img4_data_stream_1_s_full_n,
        if_write => img4_data_stream_1_s_write,
        if_dout => img4_data_stream_1_s_dout,
        if_empty_n => img4_data_stream_1_s_empty_n,
        if_read => img4_data_stream_1_s_read);

    img4_data_stream_2_s_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img3_data_stream_0_s_dout,
        if_full_n => img4_data_stream_2_s_full_n,
        if_write => img4_data_stream_2_s_write,
        if_dout => img4_data_stream_2_s_dout,
        if_empty_n => img4_data_stream_2_s_empty_n,
        if_read => img4_data_stream_2_s_read);

    imgDuplicate_data_st_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_0_s_dout,
        if_full_n => imgDuplicate_data_st_full_n,
        if_write => imgDuplicate_data_st_write,
        if_dout => imgDuplicate_data_st_dout,
        if_empty_n => imgDuplicate_data_st_empty_n,
        if_read => imgDuplicate_data_st_read);

    imgDuplicate_data_st_1_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_1_s_dout,
        if_full_n => imgDuplicate_data_st_1_full_n,
        if_write => imgDuplicate_data_st_1_write,
        if_dout => imgDuplicate_data_st_1_dout,
        if_empty_n => imgDuplicate_data_st_1_empty_n,
        if_read => imgDuplicate_data_st_1_read);

    imgDuplicate_data_st_2_fifo_U : component fifo_w8_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => img0_data_stream_2_s_dout,
        if_full_n => imgDuplicate_data_st_2_full_n,
        if_write => imgDuplicate_data_st_2_write,
        if_dout => imgDuplicate_data_st_2_dout,
        if_empty_n => imgDuplicate_data_st_2_empty_n,
        if_read => imgDuplicate_data_st_2_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond5_i_fu_698_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((exitcond5_i_fu_698_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((exitcond1_fu_722_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state12) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state12);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((exitcond1_fu_722_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_AXIvideo2Mat_fu_625_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_AXIvideo2Mat_fu_625_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_AXIvideo2Mat_fu_625_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_AXIvideo2Mat_fu_625_ap_ready = ap_const_logic_1)) then 
                    grp_AXIvideo2Mat_fu_625_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_CvtColor_fu_646_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_CvtColor_fu_646_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond5_i_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_CvtColor_fu_646_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_CvtColor_fu_646_ap_ready = ap_const_logic_1)) then 
                    grp_CvtColor_fu_646_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Filter2D_fu_615_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Filter2D_fu_615_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_Filter2D_fu_615_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Filter2D_fu_615_ap_ready = ap_const_logic_1)) then 
                    grp_Filter2D_fu_615_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Mat2AXIvideo_fu_656_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Mat2AXIvideo_fu_656_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond1_fu_722_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_Mat2AXIvideo_fu_656_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Mat2AXIvideo_fu_656_ap_ready = ap_const_logic_1)) then 
                    grp_Mat2AXIvideo_fu_656_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Mat2AXIvideo_fu_677_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Mat2AXIvideo_fu_677_ap_start_reg <= ap_const_logic_0;
            else
                if (((exitcond1_fu_722_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_Mat2AXIvideo_fu_677_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Mat2AXIvideo_fu_677_ap_ready = ap_const_logic_1)) then 
                    grp_Mat2AXIvideo_fu_677_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_out = ap_const_logic_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_rd <= not(stream_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_in = ap_const_logic_1) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_wr <= not(stream_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_out = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_rd <= not(stream_in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_in = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_wr <= not(stream_in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_dest_V_0_state = ap_const_lv2_3)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_out = ap_const_logic_1) and (stream_in_V_id_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_rd <= not(stream_in_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_in = ap_const_logic_1) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_wr <= not(stream_in_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_id_V_0_state = ap_const_lv2_3)) or ((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_out = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_rd <= not(stream_in_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_in = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_wr <= not(stream_in_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_keep_V_0_state = ap_const_lv2_3)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_out = ap_const_logic_1) and (stream_in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_rd <= not(stream_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_in = ap_const_logic_1) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_wr <= not(stream_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_last_V_0_state = ap_const_lv2_3)) or ((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_out = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_rd <= not(stream_in_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_in = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_wr <= not(stream_in_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_strb_V_0_state = ap_const_lv2_3)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_out = ap_const_logic_1) and (stream_in_V_user_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_rd <= not(stream_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_in = ap_const_logic_1) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_wr <= not(stream_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_user_V_0_state = ap_const_lv2_3)) or ((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_data_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_data_V_1_sel_rd <= not(stream_passThrough_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_data_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_data_V_1_sel_wr <= not(stream_passThrough_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_data_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_data_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_data_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_data_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_data_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_data_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_data_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_data_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_data_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_data_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_data_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_data_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_dest_V_1_sel_rd <= not(stream_passThrough_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_dest_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_dest_V_1_sel_wr <= not(stream_passThrough_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_dest_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_dest_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_dest_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_dest_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_dest_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_dest_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_dest_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_dest_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_id_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_id_V_1_sel_rd <= not(stream_passThrough_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_id_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_id_V_1_sel_wr <= not(stream_passThrough_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_id_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_id_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_id_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_id_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_id_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_id_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_id_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_id_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_id_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_id_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_id_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_id_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_id_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_keep_V_1_sel_rd <= not(stream_passThrough_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_keep_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_keep_V_1_sel_wr <= not(stream_passThrough_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_keep_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_keep_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_keep_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_keep_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_keep_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_keep_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_keep_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_keep_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_last_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_last_V_1_sel_rd <= not(stream_passThrough_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_last_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_last_V_1_sel_wr <= not(stream_passThrough_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_last_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_last_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_last_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_last_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_last_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_last_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_last_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_last_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_last_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_last_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_last_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_last_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_strb_V_1_sel_rd <= not(stream_passThrough_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_strb_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_strb_V_1_sel_wr <= not(stream_passThrough_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_strb_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_strb_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_strb_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_strb_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_strb_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_strb_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_strb_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_strb_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_user_V_1_ack_out = ap_const_logic_1) and (stream_passThrough_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_passThrough_V_user_V_1_sel_rd <= not(stream_passThrough_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_passThrough_V_user_V_1_ack_in = ap_const_logic_1) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_passThrough_V_user_V_1_sel_wr <= not(stream_passThrough_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_passThrough_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_passThrough_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_passThrough_V_user_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_0)) or ((stream_passThrough_V_user_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_passThrough_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_passThrough_V_user_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_user_V_1_ack_out = ap_const_logic_0)) or ((stream_passThrough_V_user_V_1_state = ap_const_lv2_3) and (stream_passThrough_V_user_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_passThrough_V_user_V_1_vld_in = ap_const_logic_0) and (stream_passThrough_V_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_passThrough_V_user_V_1_ack_out = ap_const_logic_0) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_1))) and (stream_passThrough_V_user_V_1_state = ap_const_lv2_3)) or ((stream_passThrough_V_user_V_1_state = ap_const_lv2_1) and (stream_passThrough_V_user_V_1_ack_out = ap_const_logic_1)) or ((stream_passThrough_V_user_V_1_state = ap_const_lv2_2) and (stream_passThrough_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_passThrough_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_passThrough_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_data_V_1_ack_out = ap_const_logic_1) and (stream_process_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_data_V_1_sel_rd <= not(stream_process_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_data_V_1_ack_in = ap_const_logic_1) and (stream_process_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_data_V_1_sel_wr <= not(stream_process_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_data_V_1_state = ap_const_lv2_2) and (stream_process_V_data_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_data_V_1_state = ap_const_lv2_3) and (stream_process_V_data_V_1_vld_in = ap_const_logic_0) and (stream_process_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_data_V_1_state = ap_const_lv2_1) and (stream_process_V_data_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_data_V_1_state = ap_const_lv2_3) and (stream_process_V_data_V_1_ack_out = ap_const_logic_0) and (stream_process_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_data_V_1_vld_in = ap_const_logic_0) and (stream_process_V_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_data_V_1_ack_out = ap_const_logic_0) and (stream_process_V_data_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_data_V_1_state = ap_const_lv2_3)) or ((stream_process_V_data_V_1_state = ap_const_lv2_1) and (stream_process_V_data_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_data_V_1_state = ap_const_lv2_2) and (stream_process_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_dest_V_1_ack_out = ap_const_logic_1) and (stream_process_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_dest_V_1_sel_rd <= not(stream_process_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_dest_V_1_ack_in = ap_const_logic_1) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_dest_V_1_sel_wr <= not(stream_process_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_dest_V_1_state = ap_const_lv2_2) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_dest_V_1_state = ap_const_lv2_3) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_process_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_dest_V_1_state = ap_const_lv2_1) and (stream_process_V_dest_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_dest_V_1_state = ap_const_lv2_3) and (stream_process_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_process_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_dest_V_1_state = ap_const_lv2_3)) or ((stream_process_V_dest_V_1_state = ap_const_lv2_1) and (stream_process_V_dest_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_dest_V_1_state = ap_const_lv2_2) and (stream_process_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_id_V_1_ack_out = ap_const_logic_1) and (stream_process_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_id_V_1_sel_rd <= not(stream_process_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_id_V_1_ack_in = ap_const_logic_1) and (stream_process_V_id_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_id_V_1_sel_wr <= not(stream_process_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_id_V_1_state = ap_const_lv2_2) and (stream_process_V_id_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_id_V_1_state = ap_const_lv2_3) and (stream_process_V_id_V_1_vld_in = ap_const_logic_0) and (stream_process_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_id_V_1_state = ap_const_lv2_1) and (stream_process_V_id_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_id_V_1_state = ap_const_lv2_3) and (stream_process_V_id_V_1_ack_out = ap_const_logic_0) and (stream_process_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_id_V_1_vld_in = ap_const_logic_0) and (stream_process_V_id_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_id_V_1_ack_out = ap_const_logic_0) and (stream_process_V_id_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_id_V_1_state = ap_const_lv2_3)) or ((stream_process_V_id_V_1_state = ap_const_lv2_1) and (stream_process_V_id_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_id_V_1_state = ap_const_lv2_2) and (stream_process_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_keep_V_1_ack_out = ap_const_logic_1) and (stream_process_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_keep_V_1_sel_rd <= not(stream_process_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_keep_V_1_ack_in = ap_const_logic_1) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_keep_V_1_sel_wr <= not(stream_process_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_keep_V_1_state = ap_const_lv2_2) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_keep_V_1_state = ap_const_lv2_3) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_process_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_keep_V_1_state = ap_const_lv2_1) and (stream_process_V_keep_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_keep_V_1_state = ap_const_lv2_3) and (stream_process_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_process_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_keep_V_1_state = ap_const_lv2_3)) or ((stream_process_V_keep_V_1_state = ap_const_lv2_1) and (stream_process_V_keep_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_keep_V_1_state = ap_const_lv2_2) and (stream_process_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_last_V_1_ack_out = ap_const_logic_1) and (stream_process_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_last_V_1_sel_rd <= not(stream_process_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_last_V_1_ack_in = ap_const_logic_1) and (stream_process_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_last_V_1_sel_wr <= not(stream_process_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_last_V_1_state = ap_const_lv2_2) and (stream_process_V_last_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_last_V_1_state = ap_const_lv2_3) and (stream_process_V_last_V_1_vld_in = ap_const_logic_0) and (stream_process_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_last_V_1_state = ap_const_lv2_1) and (stream_process_V_last_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_last_V_1_state = ap_const_lv2_3) and (stream_process_V_last_V_1_ack_out = ap_const_logic_0) and (stream_process_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_last_V_1_vld_in = ap_const_logic_0) and (stream_process_V_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_last_V_1_ack_out = ap_const_logic_0) and (stream_process_V_last_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_last_V_1_state = ap_const_lv2_3)) or ((stream_process_V_last_V_1_state = ap_const_lv2_1) and (stream_process_V_last_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_last_V_1_state = ap_const_lv2_2) and (stream_process_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_strb_V_1_ack_out = ap_const_logic_1) and (stream_process_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_strb_V_1_sel_rd <= not(stream_process_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_strb_V_1_ack_in = ap_const_logic_1) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_strb_V_1_sel_wr <= not(stream_process_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_strb_V_1_state = ap_const_lv2_2) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_strb_V_1_state = ap_const_lv2_3) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_process_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_strb_V_1_state = ap_const_lv2_1) and (stream_process_V_strb_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_strb_V_1_state = ap_const_lv2_3) and (stream_process_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_process_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_strb_V_1_state = ap_const_lv2_3)) or ((stream_process_V_strb_V_1_state = ap_const_lv2_1) and (stream_process_V_strb_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_strb_V_1_state = ap_const_lv2_2) and (stream_process_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_process_V_user_V_1_ack_out = ap_const_logic_1) and (stream_process_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_process_V_user_V_1_sel_rd <= not(stream_process_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_process_V_user_V_1_ack_in = ap_const_logic_1) and (stream_process_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_process_V_user_V_1_sel_wr <= not(stream_process_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_process_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                stream_process_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_process_V_user_V_1_state = ap_const_lv2_2) and (stream_process_V_user_V_1_vld_in = ap_const_logic_0)) or ((stream_process_V_user_V_1_state = ap_const_lv2_3) and (stream_process_V_user_V_1_vld_in = ap_const_logic_0) and (stream_process_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_process_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_process_V_user_V_1_state = ap_const_lv2_1) and (stream_process_V_user_V_1_ack_out = ap_const_logic_0)) or ((stream_process_V_user_V_1_state = ap_const_lv2_3) and (stream_process_V_user_V_1_ack_out = ap_const_logic_0) and (stream_process_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_process_V_user_V_1_vld_in = ap_const_logic_0) and (stream_process_V_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_process_V_user_V_1_ack_out = ap_const_logic_0) and (stream_process_V_user_V_1_vld_in = ap_const_logic_1))) and (stream_process_V_user_V_1_state = ap_const_lv2_3)) or ((stream_process_V_user_V_1_state = ap_const_lv2_1) and (stream_process_V_user_V_1_ack_out = ap_const_logic_1)) or ((stream_process_V_user_V_1_state = ap_const_lv2_2) and (stream_process_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_process_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_process_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_593_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                i_i_reg_593 <= i_reg_876;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_Filter2D_fu_615_ap_done = ap_const_logic_1))) then 
                i_i_reg_593 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_i_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_734_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j_i_reg_604 <= j_fu_740_p2;
            elsif (((exitcond1_fu_722_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                j_i_reg_604 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_1_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_710_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_1_reg_582 <= j_V_fu_716_p2;
            elsif (((exitcond5_i_fu_698_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                t_V_1_reg_582 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                t_V_reg_571 <= i_V_reg_858;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2Mat_fu_625_ap_done = ap_const_logic_1))) then 
                t_V_reg_571 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond_i_reg_863 <= exitcond_i_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_881 <= exitcond_fu_734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_858 <= i_V_fu_704_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_reg_876 <= i_fu_728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_A <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_B <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_A <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_B <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_A <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_B <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_A <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_B <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_A <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_B <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_data_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_data_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_data_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_data_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_dest_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_dest_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_dest_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_dest_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_id_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_id_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_id_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_id_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_keep_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_keep_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_keep_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_keep_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_last_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_last_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_last_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_last_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_strb_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_strb_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_strb_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_strb_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_user_V_1_load_A = ap_const_logic_1)) then
                stream_passThrough_V_user_V_1_payload_A <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_passThrough_V_user_V_1_load_B = ap_const_logic_1)) then
                stream_passThrough_V_user_V_1_payload_B <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_data_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_data_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_data_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_data_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_dest_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_dest_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_dest_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_dest_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_id_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_id_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_id_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_id_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_keep_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_keep_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_keep_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_keep_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_last_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_last_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_last_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_last_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_strb_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_strb_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_strb_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_strb_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_user_V_1_load_A = ap_const_logic_1)) then
                stream_process_V_user_V_1_payload_A <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_process_V_user_V_1_load_B = ap_const_logic_1)) then
                stream_process_V_user_V_1_payload_B <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TUSER;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, stream_process_V_data_V_1_ack_in, stream_process_V_keep_V_1_ack_in, stream_process_V_strb_V_1_ack_in, stream_process_V_user_V_1_ack_in, stream_process_V_last_V_1_ack_in, stream_process_V_id_V_1_ack_in, stream_process_V_dest_V_1_ack_in, stream_passThrough_V_data_V_1_ack_in, stream_passThrough_V_keep_V_1_ack_in, stream_passThrough_V_strb_V_1_ack_in, stream_passThrough_V_user_V_1_ack_in, stream_passThrough_V_last_V_1_ack_in, stream_passThrough_V_id_V_1_ack_in, stream_passThrough_V_dest_V_1_ack_in, exitcond5_i_fu_698_p2, ap_CS_fsm_state4, exitcond_i_fu_710_p2, ap_enable_reg_pp0_iter0, exitcond1_fu_722_p2, ap_CS_fsm_state11, exitcond_fu_734_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, grp_Filter2D_fu_615_ap_done, grp_AXIvideo2Mat_fu_625_ap_done, grp_CvtColor_fu_646_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_block_state15_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_AXIvideo2Mat_fu_625_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond5_i_fu_698_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((exitcond_i_fu_710_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((exitcond_i_fu_710_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_CvtColor_fu_646_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_Filter2D_fu_615_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((exitcond1_fu_722_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((exitcond_fu_734_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((exitcond_fu_734_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (ap_const_boolean_0 = ap_block_state15_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((stream_passThrough_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_data_V_1_ack_in = ap_const_logic_0) or (stream_process_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_process_V_id_V_1_ack_in = ap_const_logic_0) or (stream_process_V_last_V_1_ack_in = ap_const_logic_0) or (stream_process_V_user_V_1_ack_in = ap_const_logic_0) or (stream_process_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_process_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_process_V_data_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_id_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_last_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_user_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state14 <= ap_CS_fsm(11);
    ap_CS_fsm_state15 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(exitcond_i_reg_863, img0_data_stream_0_s_empty_n, img0_data_stream_1_s_empty_n, img0_data_stream_2_s_empty_n, img1_data_stream_0_s_full_n, img1_data_stream_1_s_full_n, img1_data_stream_2_s_full_n, imgDuplicate_data_st_full_n, imgDuplicate_data_st_1_full_n, imgDuplicate_data_st_2_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_2_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_1_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(exitcond_i_reg_863, img0_data_stream_0_s_empty_n, img0_data_stream_1_s_empty_n, img0_data_stream_2_s_empty_n, img1_data_stream_0_s_full_n, img1_data_stream_1_s_full_n, img1_data_stream_2_s_full_n, imgDuplicate_data_st_full_n, imgDuplicate_data_st_1_full_n, imgDuplicate_data_st_2_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_2_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_1_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(exitcond_i_reg_863, img0_data_stream_0_s_empty_n, img0_data_stream_1_s_empty_n, img0_data_stream_2_s_empty_n, img1_data_stream_0_s_full_n, img1_data_stream_1_s_full_n, img1_data_stream_2_s_full_n, imgDuplicate_data_st_full_n, imgDuplicate_data_st_1_full_n, imgDuplicate_data_st_2_full_n, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_2_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_1_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(exitcond_reg_881, img3_data_stream_0_s_empty_n, img3_data_stream_1_s_empty_n, img3_data_stream_2_s_empty_n, img4_data_stream_0_s_full_n, img4_data_stream_1_s_full_n, img4_data_stream_2_s_full_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(exitcond_reg_881, img3_data_stream_0_s_empty_n, img3_data_stream_1_s_empty_n, img3_data_stream_2_s_empty_n, img4_data_stream_0_s_full_n, img4_data_stream_1_s_full_n, img4_data_stream_2_s_full_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(exitcond_reg_881, img3_data_stream_0_s_empty_n, img3_data_stream_1_s_empty_n, img3_data_stream_2_s_empty_n, img4_data_stream_0_s_full_n, img4_data_stream_1_s_full_n, img4_data_stream_2_s_full_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_0_s_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state12_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter1_assign_proc : process(exitcond_reg_881, img3_data_stream_0_s_empty_n, img3_data_stream_1_s_empty_n, img3_data_stream_2_s_empty_n, img4_data_stream_0_s_full_n, img4_data_stream_1_s_full_n, img4_data_stream_2_s_full_n)
    begin
                ap_block_state13_pp1_stage0_iter1 <= (((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img4_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_reg_881 = ap_const_lv1_0) and (img3_data_stream_0_s_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state15_on_subcall_done_assign_proc : process(grp_Mat2AXIvideo_fu_656_ap_done, grp_Mat2AXIvideo_fu_677_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_Mat2AXIvideo_fu_677_ap_done = ap_const_logic_0) or (grp_Mat2AXIvideo_fu_656_ap_done = ap_const_logic_0));
    end process;


    ap_block_state16_assign_proc : process(stream_process_V_data_V_1_ack_in, stream_process_V_keep_V_1_ack_in, stream_process_V_strb_V_1_ack_in, stream_process_V_user_V_1_ack_in, stream_process_V_last_V_1_ack_in, stream_process_V_id_V_1_ack_in, stream_process_V_dest_V_1_ack_in, stream_passThrough_V_data_V_1_ack_in, stream_passThrough_V_keep_V_1_ack_in, stream_passThrough_V_strb_V_1_ack_in, stream_passThrough_V_user_V_1_ack_in, stream_passThrough_V_last_V_1_ack_in, stream_passThrough_V_id_V_1_ack_in, stream_passThrough_V_dest_V_1_ack_in)
    begin
                ap_block_state16 <= ((stream_passThrough_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_data_V_1_ack_in = ap_const_logic_0) or (stream_process_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_process_V_id_V_1_ack_in = ap_const_logic_0) or (stream_process_V_last_V_1_ack_in = ap_const_logic_0) or (stream_process_V_user_V_1_ack_in = ap_const_logic_0) or (stream_process_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_process_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_process_V_data_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_id_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_last_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_user_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(exitcond_i_reg_863, img0_data_stream_0_s_empty_n, img0_data_stream_1_s_empty_n, img0_data_stream_2_s_empty_n, img1_data_stream_0_s_full_n, img1_data_stream_1_s_full_n, img1_data_stream_2_s_full_n, imgDuplicate_data_st_full_n, imgDuplicate_data_st_1_full_n, imgDuplicate_data_st_2_full_n)
    begin
                ap_block_state6_pp0_stage0_iter1 <= (((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_2_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_1_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (imgDuplicate_data_st_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_2_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_1_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img1_data_stream_0_s_full_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_2_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_1_s_empty_n = ap_const_logic_0)) or ((exitcond_i_reg_863 = ap_const_lv1_0) and (img0_data_stream_0_s_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(exitcond_i_fu_710_p2)
    begin
        if ((exitcond_i_fu_710_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state12_assign_proc : process(exitcond_fu_734_p2)
    begin
        if ((exitcond_fu_734_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(stream_process_V_data_V_1_ack_in, stream_process_V_keep_V_1_ack_in, stream_process_V_strb_V_1_ack_in, stream_process_V_user_V_1_ack_in, stream_process_V_last_V_1_ack_in, stream_process_V_id_V_1_ack_in, stream_process_V_dest_V_1_ack_in, stream_passThrough_V_data_V_1_ack_in, stream_passThrough_V_keep_V_1_ack_in, stream_passThrough_V_strb_V_1_ack_in, stream_passThrough_V_user_V_1_ack_in, stream_passThrough_V_last_V_1_ack_in, stream_passThrough_V_id_V_1_ack_in, stream_passThrough_V_dest_V_1_ack_in, ap_CS_fsm_state16)
    begin
        if ((not(((stream_passThrough_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_data_V_1_ack_in = ap_const_logic_0) or (stream_process_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_process_V_id_V_1_ack_in = ap_const_logic_0) or (stream_process_V_last_V_1_ack_in = ap_const_logic_0) or (stream_process_V_user_V_1_ack_in = ap_const_logic_0) or (stream_process_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_process_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_process_V_data_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_id_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_last_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_user_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(stream_process_V_data_V_1_ack_in, stream_process_V_keep_V_1_ack_in, stream_process_V_strb_V_1_ack_in, stream_process_V_user_V_1_ack_in, stream_process_V_last_V_1_ack_in, stream_process_V_id_V_1_ack_in, stream_process_V_dest_V_1_ack_in, stream_passThrough_V_data_V_1_ack_in, stream_passThrough_V_keep_V_1_ack_in, stream_passThrough_V_strb_V_1_ack_in, stream_passThrough_V_user_V_1_ack_in, stream_passThrough_V_last_V_1_ack_in, stream_passThrough_V_id_V_1_ack_in, stream_passThrough_V_dest_V_1_ack_in, ap_CS_fsm_state16)
    begin
        if ((not(((stream_passThrough_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_data_V_1_ack_in = ap_const_logic_0) or (stream_process_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_process_V_id_V_1_ack_in = ap_const_logic_0) or (stream_process_V_last_V_1_ack_in = ap_const_logic_0) or (stream_process_V_user_V_1_ack_in = ap_const_logic_0) or (stream_process_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_process_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_process_V_data_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_id_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_last_V_1_ack_in = ap_const_logic_0) or (stream_passThrough_V_user_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    exitcond1_fu_722_p2 <= "1" when (i_i_reg_593 = ap_const_lv11_41A) else "0";
    exitcond5_i_fu_698_p2 <= "1" when (t_V_reg_571 = ap_const_lv11_41A) else "0";
    exitcond_fu_734_p2 <= "1" when (j_i_reg_604 = ap_const_lv11_690) else "0";
    exitcond_i_fu_710_p2 <= "1" when (t_V_1_reg_582 = ap_const_lv11_690) else "0";
    grp_AXIvideo2Mat_fu_625_ap_start <= grp_AXIvideo2Mat_fu_625_ap_start_reg;
    grp_AXIvideo2Mat_fu_625_stream_in_TVALID <= stream_in_V_dest_V_0_state(0);
    grp_CvtColor_fu_646_ap_start <= grp_CvtColor_fu_646_ap_start_reg;
    grp_Filter2D_fu_615_ap_start <= grp_Filter2D_fu_615_ap_start_reg;
    grp_Mat2AXIvideo_fu_656_ap_start <= grp_Mat2AXIvideo_fu_656_ap_start_reg;
    grp_Mat2AXIvideo_fu_656_stream_passThrough_TREADY <= stream_process_V_dest_V_1_state(1);
    grp_Mat2AXIvideo_fu_677_ap_start <= grp_Mat2AXIvideo_fu_677_ap_start_reg;
    grp_Mat2AXIvideo_fu_677_stream_passThrough_TREADY <= stream_passThrough_V_dest_V_1_state(1);
    i_V_fu_704_p2 <= std_logic_vector(unsigned(t_V_reg_571) + unsigned(ap_const_lv11_1));
    i_fu_728_p2 <= std_logic_vector(unsigned(i_i_reg_593) + unsigned(ap_const_lv11_1));

    img0_data_stream_0_s_read_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img0_data_stream_0_s_read <= ap_const_logic_1;
        else 
            img0_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img0_data_stream_0_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img0_data_stream_0_s_write <= grp_AXIvideo2Mat_fu_625_img_data_stream_0_V_write;
        else 
            img0_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img0_data_stream_1_s_read_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img0_data_stream_1_s_read <= ap_const_logic_1;
        else 
            img0_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img0_data_stream_1_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img0_data_stream_1_s_write <= grp_AXIvideo2Mat_fu_625_img_data_stream_1_V_write;
        else 
            img0_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img0_data_stream_2_s_read_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img0_data_stream_2_s_read <= ap_const_logic_1;
        else 
            img0_data_stream_2_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img0_data_stream_2_s_write_assign_proc : process(grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_write, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img0_data_stream_2_s_write <= grp_AXIvideo2Mat_fu_625_img_data_stream_2_V_write;
        else 
            img0_data_stream_2_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_0_s_read_assign_proc : process(grp_CvtColor_fu_646_p_src_data_stream_0_V_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img1_data_stream_0_s_read <= grp_CvtColor_fu_646_p_src_data_stream_0_V_read;
        else 
            img1_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_0_s_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_0_s_write <= ap_const_logic_1;
        else 
            img1_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_s_read_assign_proc : process(grp_CvtColor_fu_646_p_src_data_stream_1_V_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img1_data_stream_1_s_read <= grp_CvtColor_fu_646_p_src_data_stream_1_V_read;
        else 
            img1_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_1_s_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_1_s_write <= ap_const_logic_1;
        else 
            img1_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_2_s_read_assign_proc : process(grp_CvtColor_fu_646_p_src_data_stream_2_V_read, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img1_data_stream_2_s_read <= grp_CvtColor_fu_646_p_src_data_stream_2_V_read;
        else 
            img1_data_stream_2_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img1_data_stream_2_s_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img1_data_stream_2_s_write <= ap_const_logic_1;
        else 
            img1_data_stream_2_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_s_read_assign_proc : process(grp_Filter2D_fu_615_p_src_data_stream_0_V_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img2_data_stream_0_s_read <= grp_Filter2D_fu_615_p_src_data_stream_0_V_read;
        else 
            img2_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_0_s_write_assign_proc : process(grp_CvtColor_fu_646_p_dst_data_stream_0_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img2_data_stream_0_s_write <= grp_CvtColor_fu_646_p_dst_data_stream_0_V_write;
        else 
            img2_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_s_read_assign_proc : process(grp_Filter2D_fu_615_p_src_data_stream_1_V_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img2_data_stream_1_s_read <= grp_Filter2D_fu_615_p_src_data_stream_1_V_read;
        else 
            img2_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_1_s_write_assign_proc : process(grp_CvtColor_fu_646_p_dst_data_stream_1_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img2_data_stream_1_s_write <= grp_CvtColor_fu_646_p_dst_data_stream_1_V_write;
        else 
            img2_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_2_s_read_assign_proc : process(grp_Filter2D_fu_615_p_src_data_stream_2_V_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img2_data_stream_2_s_read <= grp_Filter2D_fu_615_p_src_data_stream_2_V_read;
        else 
            img2_data_stream_2_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img2_data_stream_2_s_write_assign_proc : process(grp_CvtColor_fu_646_p_dst_data_stream_2_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            img2_data_stream_2_s_write <= grp_CvtColor_fu_646_p_dst_data_stream_2_V_write;
        else 
            img2_data_stream_2_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_0_s_read_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img3_data_stream_0_s_read <= ap_const_logic_1;
        else 
            img3_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_0_s_write_assign_proc : process(grp_Filter2D_fu_615_p_dst_data_stream_0_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img3_data_stream_0_s_write <= grp_Filter2D_fu_615_p_dst_data_stream_0_V_write;
        else 
            img3_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_1_s_read_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img3_data_stream_1_s_read <= ap_const_logic_1;
        else 
            img3_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_1_s_write_assign_proc : process(grp_Filter2D_fu_615_p_dst_data_stream_1_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img3_data_stream_1_s_write <= grp_Filter2D_fu_615_p_dst_data_stream_1_V_write;
        else 
            img3_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_2_s_read_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img3_data_stream_2_s_read <= ap_const_logic_1;
        else 
            img3_data_stream_2_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img3_data_stream_2_s_write_assign_proc : process(grp_Filter2D_fu_615_p_dst_data_stream_2_V_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img3_data_stream_2_s_write <= grp_Filter2D_fu_615_p_dst_data_stream_2_V_write;
        else 
            img3_data_stream_2_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_0_s_read_assign_proc : process(grp_Mat2AXIvideo_fu_656_img_data_stream_0_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            img4_data_stream_0_s_read <= grp_Mat2AXIvideo_fu_656_img_data_stream_0_V_read;
        else 
            img4_data_stream_0_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_0_s_write_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img4_data_stream_0_s_write <= ap_const_logic_1;
        else 
            img4_data_stream_0_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_1_s_read_assign_proc : process(grp_Mat2AXIvideo_fu_656_img_data_stream_1_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            img4_data_stream_1_s_read <= grp_Mat2AXIvideo_fu_656_img_data_stream_1_V_read;
        else 
            img4_data_stream_1_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_1_s_write_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img4_data_stream_1_s_write <= ap_const_logic_1;
        else 
            img4_data_stream_1_s_write <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_2_s_read_assign_proc : process(grp_Mat2AXIvideo_fu_656_img_data_stream_2_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            img4_data_stream_2_s_read <= grp_Mat2AXIvideo_fu_656_img_data_stream_2_V_read;
        else 
            img4_data_stream_2_s_read <= ap_const_logic_0;
        end if; 
    end process;


    img4_data_stream_2_s_write_assign_proc : process(exitcond_reg_881, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_881 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            img4_data_stream_2_s_write <= ap_const_logic_1;
        else 
            img4_data_stream_2_s_write <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_1_read_assign_proc : process(grp_Mat2AXIvideo_fu_677_img_data_stream_1_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            imgDuplicate_data_st_1_read <= grp_Mat2AXIvideo_fu_677_img_data_stream_1_V_read;
        else 
            imgDuplicate_data_st_1_read <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_1_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgDuplicate_data_st_1_write <= ap_const_logic_1;
        else 
            imgDuplicate_data_st_1_write <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_2_read_assign_proc : process(grp_Mat2AXIvideo_fu_677_img_data_stream_2_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            imgDuplicate_data_st_2_read <= grp_Mat2AXIvideo_fu_677_img_data_stream_2_V_read;
        else 
            imgDuplicate_data_st_2_read <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_2_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgDuplicate_data_st_2_write <= ap_const_logic_1;
        else 
            imgDuplicate_data_st_2_write <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_read_assign_proc : process(grp_Mat2AXIvideo_fu_677_img_data_stream_0_V_read, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            imgDuplicate_data_st_read <= grp_Mat2AXIvideo_fu_677_img_data_stream_0_V_read;
        else 
            imgDuplicate_data_st_read <= ap_const_logic_0;
        end if; 
    end process;


    imgDuplicate_data_st_write_assign_proc : process(exitcond_i_reg_863, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond_i_reg_863 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            imgDuplicate_data_st_write <= ap_const_logic_1;
        else 
            imgDuplicate_data_st_write <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_716_p2 <= std_logic_vector(unsigned(t_V_1_reg_582) + unsigned(ap_const_lv11_1));
    j_fu_740_p2 <= std_logic_vector(unsigned(j_i_reg_604) + unsigned(ap_const_lv11_1));
    stream_in_TREADY <= stream_in_V_dest_V_0_state(1);
    stream_in_V_data_V_0_ack_in <= stream_in_V_data_V_0_state(1);

    stream_in_V_data_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_data_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_data_V_0_data_out_assign_proc : process(stream_in_V_data_V_0_payload_A, stream_in_V_data_V_0_payload_B, stream_in_V_data_V_0_sel)
    begin
        if ((stream_in_V_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_B;
        else 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_data_V_0_load_A <= (stream_in_V_data_V_0_state_cmp_full and not(stream_in_V_data_V_0_sel_wr));
    stream_in_V_data_V_0_load_B <= (stream_in_V_data_V_0_state_cmp_full and stream_in_V_data_V_0_sel_wr);
    stream_in_V_data_V_0_sel <= stream_in_V_data_V_0_sel_rd;
    stream_in_V_data_V_0_state_cmp_full <= '0' when (stream_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_data_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_data_V_0_vld_out <= stream_in_V_data_V_0_state(0);
    stream_in_V_dest_V_0_ack_in <= stream_in_V_dest_V_0_state(1);

    stream_in_V_dest_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_dest_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_dest_V_0_data_out_assign_proc : process(stream_in_V_dest_V_0_payload_A, stream_in_V_dest_V_0_payload_B, stream_in_V_dest_V_0_sel)
    begin
        if ((stream_in_V_dest_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_B;
        else 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_dest_V_0_load_A <= (stream_in_V_dest_V_0_state_cmp_full and not(stream_in_V_dest_V_0_sel_wr));
    stream_in_V_dest_V_0_load_B <= (stream_in_V_dest_V_0_state_cmp_full and stream_in_V_dest_V_0_sel_wr);
    stream_in_V_dest_V_0_sel <= stream_in_V_dest_V_0_sel_rd;
    stream_in_V_dest_V_0_state_cmp_full <= '0' when (stream_in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_dest_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_dest_V_0_vld_out <= stream_in_V_dest_V_0_state(0);
    stream_in_V_id_V_0_ack_in <= stream_in_V_id_V_0_state(1);

    stream_in_V_id_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_id_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_id_V_0_data_out_assign_proc : process(stream_in_V_id_V_0_payload_A, stream_in_V_id_V_0_payload_B, stream_in_V_id_V_0_sel)
    begin
        if ((stream_in_V_id_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_B;
        else 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_id_V_0_load_A <= (stream_in_V_id_V_0_state_cmp_full and not(stream_in_V_id_V_0_sel_wr));
    stream_in_V_id_V_0_load_B <= (stream_in_V_id_V_0_state_cmp_full and stream_in_V_id_V_0_sel_wr);
    stream_in_V_id_V_0_sel <= stream_in_V_id_V_0_sel_rd;
    stream_in_V_id_V_0_state_cmp_full <= '0' when (stream_in_V_id_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_id_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_id_V_0_vld_out <= stream_in_V_id_V_0_state(0);
    stream_in_V_keep_V_0_ack_in <= stream_in_V_keep_V_0_state(1);

    stream_in_V_keep_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_keep_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_keep_V_0_data_out_assign_proc : process(stream_in_V_keep_V_0_payload_A, stream_in_V_keep_V_0_payload_B, stream_in_V_keep_V_0_sel)
    begin
        if ((stream_in_V_keep_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_B;
        else 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_keep_V_0_load_A <= (stream_in_V_keep_V_0_state_cmp_full and not(stream_in_V_keep_V_0_sel_wr));
    stream_in_V_keep_V_0_load_B <= (stream_in_V_keep_V_0_state_cmp_full and stream_in_V_keep_V_0_sel_wr);
    stream_in_V_keep_V_0_sel <= stream_in_V_keep_V_0_sel_rd;
    stream_in_V_keep_V_0_state_cmp_full <= '0' when (stream_in_V_keep_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_keep_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_keep_V_0_vld_out <= stream_in_V_keep_V_0_state(0);
    stream_in_V_last_V_0_ack_in <= stream_in_V_last_V_0_state(1);

    stream_in_V_last_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_last_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_last_V_0_data_out_assign_proc : process(stream_in_V_last_V_0_payload_A, stream_in_V_last_V_0_payload_B, stream_in_V_last_V_0_sel)
    begin
        if ((stream_in_V_last_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_B;
        else 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_last_V_0_load_A <= (stream_in_V_last_V_0_state_cmp_full and not(stream_in_V_last_V_0_sel_wr));
    stream_in_V_last_V_0_load_B <= (stream_in_V_last_V_0_state_cmp_full and stream_in_V_last_V_0_sel_wr);
    stream_in_V_last_V_0_sel <= stream_in_V_last_V_0_sel_rd;
    stream_in_V_last_V_0_state_cmp_full <= '0' when (stream_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_last_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_last_V_0_vld_out <= stream_in_V_last_V_0_state(0);
    stream_in_V_strb_V_0_ack_in <= stream_in_V_strb_V_0_state(1);

    stream_in_V_strb_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_strb_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_strb_V_0_data_out_assign_proc : process(stream_in_V_strb_V_0_payload_A, stream_in_V_strb_V_0_payload_B, stream_in_V_strb_V_0_sel)
    begin
        if ((stream_in_V_strb_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_B;
        else 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_strb_V_0_load_A <= (stream_in_V_strb_V_0_state_cmp_full and not(stream_in_V_strb_V_0_sel_wr));
    stream_in_V_strb_V_0_load_B <= (stream_in_V_strb_V_0_state_cmp_full and stream_in_V_strb_V_0_sel_wr);
    stream_in_V_strb_V_0_sel <= stream_in_V_strb_V_0_sel_rd;
    stream_in_V_strb_V_0_state_cmp_full <= '0' when (stream_in_V_strb_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_strb_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_strb_V_0_vld_out <= stream_in_V_strb_V_0_state(0);
    stream_in_V_user_V_0_ack_in <= stream_in_V_user_V_0_state(1);

    stream_in_V_user_V_0_ack_out_assign_proc : process(grp_AXIvideo2Mat_fu_625_stream_in_TREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            stream_in_V_user_V_0_ack_out <= grp_AXIvideo2Mat_fu_625_stream_in_TREADY;
        else 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_user_V_0_data_out_assign_proc : process(stream_in_V_user_V_0_payload_A, stream_in_V_user_V_0_payload_B, stream_in_V_user_V_0_sel)
    begin
        if ((stream_in_V_user_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_B;
        else 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_user_V_0_load_A <= (stream_in_V_user_V_0_state_cmp_full and not(stream_in_V_user_V_0_sel_wr));
    stream_in_V_user_V_0_load_B <= (stream_in_V_user_V_0_state_cmp_full and stream_in_V_user_V_0_sel_wr);
    stream_in_V_user_V_0_sel <= stream_in_V_user_V_0_sel_rd;
    stream_in_V_user_V_0_state_cmp_full <= '0' when (stream_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_user_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_user_V_0_vld_out <= stream_in_V_user_V_0_state(0);
    stream_passThrough_TDATA <= stream_passThrough_V_data_V_1_data_out;
    stream_passThrough_TDEST <= stream_passThrough_V_dest_V_1_data_out;
    stream_passThrough_TID <= stream_passThrough_V_id_V_1_data_out;
    stream_passThrough_TKEEP <= stream_passThrough_V_keep_V_1_data_out;
    stream_passThrough_TLAST <= stream_passThrough_V_last_V_1_data_out;
    stream_passThrough_TSTRB <= stream_passThrough_V_strb_V_1_data_out;
    stream_passThrough_TUSER <= stream_passThrough_V_user_V_1_data_out;
    stream_passThrough_TVALID <= stream_passThrough_V_dest_V_1_state(0);
    stream_passThrough_V_data_V_1_ack_in <= stream_passThrough_V_data_V_1_state(1);
    stream_passThrough_V_data_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_data_V_1_data_out_assign_proc : process(stream_passThrough_V_data_V_1_payload_A, stream_passThrough_V_data_V_1_payload_B, stream_passThrough_V_data_V_1_sel)
    begin
        if ((stream_passThrough_V_data_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_data_V_1_data_out <= stream_passThrough_V_data_V_1_payload_B;
        else 
            stream_passThrough_V_data_V_1_data_out <= stream_passThrough_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_data_V_1_load_A <= (stream_passThrough_V_data_V_1_state_cmp_full and not(stream_passThrough_V_data_V_1_sel_wr));
    stream_passThrough_V_data_V_1_load_B <= (stream_passThrough_V_data_V_1_state_cmp_full and stream_passThrough_V_data_V_1_sel_wr);
    stream_passThrough_V_data_V_1_sel <= stream_passThrough_V_data_V_1_sel_rd;
    stream_passThrough_V_data_V_1_state_cmp_full <= '0' when (stream_passThrough_V_data_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_data_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_data_V_1_vld_out <= stream_passThrough_V_data_V_1_state(0);
    stream_passThrough_V_dest_V_1_ack_in <= stream_passThrough_V_dest_V_1_state(1);
    stream_passThrough_V_dest_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_dest_V_1_data_out_assign_proc : process(stream_passThrough_V_dest_V_1_payload_A, stream_passThrough_V_dest_V_1_payload_B, stream_passThrough_V_dest_V_1_sel)
    begin
        if ((stream_passThrough_V_dest_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_dest_V_1_data_out <= stream_passThrough_V_dest_V_1_payload_B;
        else 
            stream_passThrough_V_dest_V_1_data_out <= stream_passThrough_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_dest_V_1_load_A <= (stream_passThrough_V_dest_V_1_state_cmp_full and not(stream_passThrough_V_dest_V_1_sel_wr));
    stream_passThrough_V_dest_V_1_load_B <= (stream_passThrough_V_dest_V_1_state_cmp_full and stream_passThrough_V_dest_V_1_sel_wr);
    stream_passThrough_V_dest_V_1_sel <= stream_passThrough_V_dest_V_1_sel_rd;
    stream_passThrough_V_dest_V_1_state_cmp_full <= '0' when (stream_passThrough_V_dest_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_dest_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_dest_V_1_vld_out <= stream_passThrough_V_dest_V_1_state(0);
    stream_passThrough_V_id_V_1_ack_in <= stream_passThrough_V_id_V_1_state(1);
    stream_passThrough_V_id_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_id_V_1_data_out_assign_proc : process(stream_passThrough_V_id_V_1_payload_A, stream_passThrough_V_id_V_1_payload_B, stream_passThrough_V_id_V_1_sel)
    begin
        if ((stream_passThrough_V_id_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_id_V_1_data_out <= stream_passThrough_V_id_V_1_payload_B;
        else 
            stream_passThrough_V_id_V_1_data_out <= stream_passThrough_V_id_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_id_V_1_load_A <= (stream_passThrough_V_id_V_1_state_cmp_full and not(stream_passThrough_V_id_V_1_sel_wr));
    stream_passThrough_V_id_V_1_load_B <= (stream_passThrough_V_id_V_1_state_cmp_full and stream_passThrough_V_id_V_1_sel_wr);
    stream_passThrough_V_id_V_1_sel <= stream_passThrough_V_id_V_1_sel_rd;
    stream_passThrough_V_id_V_1_state_cmp_full <= '0' when (stream_passThrough_V_id_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_id_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_id_V_1_vld_out <= stream_passThrough_V_id_V_1_state(0);
    stream_passThrough_V_keep_V_1_ack_in <= stream_passThrough_V_keep_V_1_state(1);
    stream_passThrough_V_keep_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_keep_V_1_data_out_assign_proc : process(stream_passThrough_V_keep_V_1_payload_A, stream_passThrough_V_keep_V_1_payload_B, stream_passThrough_V_keep_V_1_sel)
    begin
        if ((stream_passThrough_V_keep_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_keep_V_1_data_out <= stream_passThrough_V_keep_V_1_payload_B;
        else 
            stream_passThrough_V_keep_V_1_data_out <= stream_passThrough_V_keep_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_keep_V_1_load_A <= (stream_passThrough_V_keep_V_1_state_cmp_full and not(stream_passThrough_V_keep_V_1_sel_wr));
    stream_passThrough_V_keep_V_1_load_B <= (stream_passThrough_V_keep_V_1_state_cmp_full and stream_passThrough_V_keep_V_1_sel_wr);
    stream_passThrough_V_keep_V_1_sel <= stream_passThrough_V_keep_V_1_sel_rd;
    stream_passThrough_V_keep_V_1_state_cmp_full <= '0' when (stream_passThrough_V_keep_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_keep_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_keep_V_1_vld_out <= stream_passThrough_V_keep_V_1_state(0);
    stream_passThrough_V_last_V_1_ack_in <= stream_passThrough_V_last_V_1_state(1);
    stream_passThrough_V_last_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_last_V_1_data_out_assign_proc : process(stream_passThrough_V_last_V_1_payload_A, stream_passThrough_V_last_V_1_payload_B, stream_passThrough_V_last_V_1_sel)
    begin
        if ((stream_passThrough_V_last_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_last_V_1_data_out <= stream_passThrough_V_last_V_1_payload_B;
        else 
            stream_passThrough_V_last_V_1_data_out <= stream_passThrough_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_last_V_1_load_A <= (stream_passThrough_V_last_V_1_state_cmp_full and not(stream_passThrough_V_last_V_1_sel_wr));
    stream_passThrough_V_last_V_1_load_B <= (stream_passThrough_V_last_V_1_state_cmp_full and stream_passThrough_V_last_V_1_sel_wr);
    stream_passThrough_V_last_V_1_sel <= stream_passThrough_V_last_V_1_sel_rd;
    stream_passThrough_V_last_V_1_state_cmp_full <= '0' when (stream_passThrough_V_last_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_last_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_last_V_1_vld_out <= stream_passThrough_V_last_V_1_state(0);
    stream_passThrough_V_strb_V_1_ack_in <= stream_passThrough_V_strb_V_1_state(1);
    stream_passThrough_V_strb_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_strb_V_1_data_out_assign_proc : process(stream_passThrough_V_strb_V_1_payload_A, stream_passThrough_V_strb_V_1_payload_B, stream_passThrough_V_strb_V_1_sel)
    begin
        if ((stream_passThrough_V_strb_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_strb_V_1_data_out <= stream_passThrough_V_strb_V_1_payload_B;
        else 
            stream_passThrough_V_strb_V_1_data_out <= stream_passThrough_V_strb_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_strb_V_1_load_A <= (stream_passThrough_V_strb_V_1_state_cmp_full and not(stream_passThrough_V_strb_V_1_sel_wr));
    stream_passThrough_V_strb_V_1_load_B <= (stream_passThrough_V_strb_V_1_state_cmp_full and stream_passThrough_V_strb_V_1_sel_wr);
    stream_passThrough_V_strb_V_1_sel <= stream_passThrough_V_strb_V_1_sel_rd;
    stream_passThrough_V_strb_V_1_state_cmp_full <= '0' when (stream_passThrough_V_strb_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_strb_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_strb_V_1_vld_out <= stream_passThrough_V_strb_V_1_state(0);
    stream_passThrough_V_user_V_1_ack_in <= stream_passThrough_V_user_V_1_state(1);
    stream_passThrough_V_user_V_1_ack_out <= stream_passThrough_TREADY;

    stream_passThrough_V_user_V_1_data_out_assign_proc : process(stream_passThrough_V_user_V_1_payload_A, stream_passThrough_V_user_V_1_payload_B, stream_passThrough_V_user_V_1_sel)
    begin
        if ((stream_passThrough_V_user_V_1_sel = ap_const_logic_1)) then 
            stream_passThrough_V_user_V_1_data_out <= stream_passThrough_V_user_V_1_payload_B;
        else 
            stream_passThrough_V_user_V_1_data_out <= stream_passThrough_V_user_V_1_payload_A;
        end if; 
    end process;

    stream_passThrough_V_user_V_1_load_A <= (stream_passThrough_V_user_V_1_state_cmp_full and not(stream_passThrough_V_user_V_1_sel_wr));
    stream_passThrough_V_user_V_1_load_B <= (stream_passThrough_V_user_V_1_state_cmp_full and stream_passThrough_V_user_V_1_sel_wr);
    stream_passThrough_V_user_V_1_sel <= stream_passThrough_V_user_V_1_sel_rd;
    stream_passThrough_V_user_V_1_state_cmp_full <= '0' when (stream_passThrough_V_user_V_1_state = ap_const_lv2_1) else '1';
    stream_passThrough_V_user_V_1_vld_in <= grp_Mat2AXIvideo_fu_677_stream_passThrough_TVALID;
    stream_passThrough_V_user_V_1_vld_out <= stream_passThrough_V_user_V_1_state(0);
    stream_process_TDATA <= stream_process_V_data_V_1_data_out;
    stream_process_TDEST <= stream_process_V_dest_V_1_data_out;
    stream_process_TID <= stream_process_V_id_V_1_data_out;
    stream_process_TKEEP <= stream_process_V_keep_V_1_data_out;
    stream_process_TLAST <= stream_process_V_last_V_1_data_out;
    stream_process_TSTRB <= stream_process_V_strb_V_1_data_out;
    stream_process_TUSER <= stream_process_V_user_V_1_data_out;
    stream_process_TVALID <= stream_process_V_dest_V_1_state(0);
    stream_process_V_data_V_1_ack_in <= stream_process_V_data_V_1_state(1);
    stream_process_V_data_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_data_V_1_data_out_assign_proc : process(stream_process_V_data_V_1_payload_A, stream_process_V_data_V_1_payload_B, stream_process_V_data_V_1_sel)
    begin
        if ((stream_process_V_data_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_data_V_1_data_out <= stream_process_V_data_V_1_payload_B;
        else 
            stream_process_V_data_V_1_data_out <= stream_process_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_data_V_1_load_A <= (stream_process_V_data_V_1_state_cmp_full and not(stream_process_V_data_V_1_sel_wr));
    stream_process_V_data_V_1_load_B <= (stream_process_V_data_V_1_state_cmp_full and stream_process_V_data_V_1_sel_wr);
    stream_process_V_data_V_1_sel <= stream_process_V_data_V_1_sel_rd;
    stream_process_V_data_V_1_state_cmp_full <= '0' when (stream_process_V_data_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_data_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_data_V_1_vld_out <= stream_process_V_data_V_1_state(0);
    stream_process_V_dest_V_1_ack_in <= stream_process_V_dest_V_1_state(1);
    stream_process_V_dest_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_dest_V_1_data_out_assign_proc : process(stream_process_V_dest_V_1_payload_A, stream_process_V_dest_V_1_payload_B, stream_process_V_dest_V_1_sel)
    begin
        if ((stream_process_V_dest_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_dest_V_1_data_out <= stream_process_V_dest_V_1_payload_B;
        else 
            stream_process_V_dest_V_1_data_out <= stream_process_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_dest_V_1_load_A <= (stream_process_V_dest_V_1_state_cmp_full and not(stream_process_V_dest_V_1_sel_wr));
    stream_process_V_dest_V_1_load_B <= (stream_process_V_dest_V_1_state_cmp_full and stream_process_V_dest_V_1_sel_wr);
    stream_process_V_dest_V_1_sel <= stream_process_V_dest_V_1_sel_rd;
    stream_process_V_dest_V_1_state_cmp_full <= '0' when (stream_process_V_dest_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_dest_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_dest_V_1_vld_out <= stream_process_V_dest_V_1_state(0);
    stream_process_V_id_V_1_ack_in <= stream_process_V_id_V_1_state(1);
    stream_process_V_id_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_id_V_1_data_out_assign_proc : process(stream_process_V_id_V_1_payload_A, stream_process_V_id_V_1_payload_B, stream_process_V_id_V_1_sel)
    begin
        if ((stream_process_V_id_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_id_V_1_data_out <= stream_process_V_id_V_1_payload_B;
        else 
            stream_process_V_id_V_1_data_out <= stream_process_V_id_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_id_V_1_load_A <= (stream_process_V_id_V_1_state_cmp_full and not(stream_process_V_id_V_1_sel_wr));
    stream_process_V_id_V_1_load_B <= (stream_process_V_id_V_1_state_cmp_full and stream_process_V_id_V_1_sel_wr);
    stream_process_V_id_V_1_sel <= stream_process_V_id_V_1_sel_rd;
    stream_process_V_id_V_1_state_cmp_full <= '0' when (stream_process_V_id_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_id_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_id_V_1_vld_out <= stream_process_V_id_V_1_state(0);
    stream_process_V_keep_V_1_ack_in <= stream_process_V_keep_V_1_state(1);
    stream_process_V_keep_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_keep_V_1_data_out_assign_proc : process(stream_process_V_keep_V_1_payload_A, stream_process_V_keep_V_1_payload_B, stream_process_V_keep_V_1_sel)
    begin
        if ((stream_process_V_keep_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_keep_V_1_data_out <= stream_process_V_keep_V_1_payload_B;
        else 
            stream_process_V_keep_V_1_data_out <= stream_process_V_keep_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_keep_V_1_load_A <= (stream_process_V_keep_V_1_state_cmp_full and not(stream_process_V_keep_V_1_sel_wr));
    stream_process_V_keep_V_1_load_B <= (stream_process_V_keep_V_1_state_cmp_full and stream_process_V_keep_V_1_sel_wr);
    stream_process_V_keep_V_1_sel <= stream_process_V_keep_V_1_sel_rd;
    stream_process_V_keep_V_1_state_cmp_full <= '0' when (stream_process_V_keep_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_keep_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_keep_V_1_vld_out <= stream_process_V_keep_V_1_state(0);
    stream_process_V_last_V_1_ack_in <= stream_process_V_last_V_1_state(1);
    stream_process_V_last_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_last_V_1_data_out_assign_proc : process(stream_process_V_last_V_1_payload_A, stream_process_V_last_V_1_payload_B, stream_process_V_last_V_1_sel)
    begin
        if ((stream_process_V_last_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_last_V_1_data_out <= stream_process_V_last_V_1_payload_B;
        else 
            stream_process_V_last_V_1_data_out <= stream_process_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_last_V_1_load_A <= (stream_process_V_last_V_1_state_cmp_full and not(stream_process_V_last_V_1_sel_wr));
    stream_process_V_last_V_1_load_B <= (stream_process_V_last_V_1_state_cmp_full and stream_process_V_last_V_1_sel_wr);
    stream_process_V_last_V_1_sel <= stream_process_V_last_V_1_sel_rd;
    stream_process_V_last_V_1_state_cmp_full <= '0' when (stream_process_V_last_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_last_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_last_V_1_vld_out <= stream_process_V_last_V_1_state(0);
    stream_process_V_strb_V_1_ack_in <= stream_process_V_strb_V_1_state(1);
    stream_process_V_strb_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_strb_V_1_data_out_assign_proc : process(stream_process_V_strb_V_1_payload_A, stream_process_V_strb_V_1_payload_B, stream_process_V_strb_V_1_sel)
    begin
        if ((stream_process_V_strb_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_strb_V_1_data_out <= stream_process_V_strb_V_1_payload_B;
        else 
            stream_process_V_strb_V_1_data_out <= stream_process_V_strb_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_strb_V_1_load_A <= (stream_process_V_strb_V_1_state_cmp_full and not(stream_process_V_strb_V_1_sel_wr));
    stream_process_V_strb_V_1_load_B <= (stream_process_V_strb_V_1_state_cmp_full and stream_process_V_strb_V_1_sel_wr);
    stream_process_V_strb_V_1_sel <= stream_process_V_strb_V_1_sel_rd;
    stream_process_V_strb_V_1_state_cmp_full <= '0' when (stream_process_V_strb_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_strb_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_strb_V_1_vld_out <= stream_process_V_strb_V_1_state(0);
    stream_process_V_user_V_1_ack_in <= stream_process_V_user_V_1_state(1);
    stream_process_V_user_V_1_ack_out <= stream_process_TREADY;

    stream_process_V_user_V_1_data_out_assign_proc : process(stream_process_V_user_V_1_payload_A, stream_process_V_user_V_1_payload_B, stream_process_V_user_V_1_sel)
    begin
        if ((stream_process_V_user_V_1_sel = ap_const_logic_1)) then 
            stream_process_V_user_V_1_data_out <= stream_process_V_user_V_1_payload_B;
        else 
            stream_process_V_user_V_1_data_out <= stream_process_V_user_V_1_payload_A;
        end if; 
    end process;

    stream_process_V_user_V_1_load_A <= (stream_process_V_user_V_1_state_cmp_full and not(stream_process_V_user_V_1_sel_wr));
    stream_process_V_user_V_1_load_B <= (stream_process_V_user_V_1_state_cmp_full and stream_process_V_user_V_1_sel_wr);
    stream_process_V_user_V_1_sel <= stream_process_V_user_V_1_sel_rd;
    stream_process_V_user_V_1_state_cmp_full <= '0' when (stream_process_V_user_V_1_state = ap_const_lv2_1) else '1';
    stream_process_V_user_V_1_vld_in <= grp_Mat2AXIvideo_fu_656_stream_passThrough_TVALID;
    stream_process_V_user_V_1_vld_out <= stream_process_V_user_V_1_state(0);
end behav;
