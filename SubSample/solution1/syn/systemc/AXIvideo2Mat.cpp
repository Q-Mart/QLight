// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2Mat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2Mat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2Mat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state8 = "1000000";
const sc_lv<8> AXIvideo2Mat::ap_ST_fsm_state9 = "10000000";
const bool AXIvideo2Mat::ap_const_boolean_1 = true;
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_4 = "100";
const bool AXIvideo2Mat::ap_const_boolean_0 = false;
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_0 = "0";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_3 = "11";
const sc_lv<1> AXIvideo2Mat::ap_const_lv1_1 = "1";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_2 = "10";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_0 = "00000000000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_5 = "101";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_41A = "10000011010";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_1 = "1";
const sc_lv<11> AXIvideo2Mat::ap_const_lv11_690 = "11010010000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_8 = "1000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_F = "1111";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_10 = "10000";
const sc_lv<32> AXIvideo2Mat::ap_const_lv32_17 = "10111";

AXIvideo2Mat::AXIvideo2Mat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( stream_in_TVALID );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_predicate_op50_read_state5 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( stream_in_TVALID );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_predicate_op50_read_state5 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( stream_in_TVALID );
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_predicate_op50_read_state5 );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);
    sensitive << ( stream_in_TVALID );
    sensitive << ( ap_predicate_op50_read_state5 );

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( exitcond_reg_412 );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( stream_in_TVALID );
    sensitive << ( eol_2_reg_292 );

    SC_METHOD(thread_ap_condition_145);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ap_condition_225);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_fu_333_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( exitcond_fu_333_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond5_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_axi_data_V_1_phi_fu_212_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( axi_data_V_1_reg_209 );
    sensitive << ( p_Val2_s_reg_256 );

    SC_METHOD(thread_ap_phi_mux_eol_1_phi_fu_201_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( eol_1_reg_198 );
    sensitive << ( axi_last_V_2_reg_243 );

    SC_METHOD(thread_ap_phi_mux_eol_2_phi_fu_295_p4);
    sensitive << ( eol_2_reg_292 );

    SC_METHOD(thread_ap_phi_mux_eol_phi_fu_235_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( eol_reg_231 );
    sensitive << ( axi_last_V_2_reg_243 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_260_p4);
    sensitive << ( stream_in_TDATA );
    sensitive << ( brmerge_fu_348_p2 );
    sensitive << ( ap_phi_mux_axi_data_V_1_phi_fu_212_p4 );
    sensitive << ( ap_phi_reg_pp1_iter0_p_Val2_s_reg_256 );
    sensitive << ( ap_condition_225 );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_256);

    SC_METHOD(thread_ap_predicate_op50_read_state5);
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( brmerge_fu_348_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond5_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_brmerge_fu_348_p2);
    sensitive << ( ap_phi_mux_eol_phi_fu_235_p4 );
    sensitive << ( sof_1_fu_124 );

    SC_METHOD(thread_exitcond5_fu_321_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_187 );

    SC_METHOD(thread_exitcond_fu_333_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( t_V_3_reg_220 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_i_V_fu_327_p2);
    sensitive << ( t_V_reg_187 );

    SC_METHOD(thread_img_data_stream_0_V_blk_n);
    sensitive << ( img_data_stream_0_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );

    SC_METHOD(thread_img_data_stream_0_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( tmp_96_reg_425 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_0_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_1_V_blk_n);
    sensitive << ( img_data_stream_1_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );

    SC_METHOD(thread_img_data_stream_1_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( tmp_32_reg_430 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_1_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_stream_2_V_blk_n);
    sensitive << ( img_data_stream_2_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );

    SC_METHOD(thread_img_data_stream_2_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( tmp_33_reg_435 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_stream_2_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond_reg_412 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_j_V_fu_339_p2);
    sensitive << ( t_V_3_reg_220 );

    SC_METHOD(thread_stream_in_TDATA_blk_n);
    sensitive << ( stream_in_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( brmerge_fu_348_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( eol_2_reg_292 );

    SC_METHOD(thread_stream_in_TREADY);
    sensitive << ( stream_in_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op50_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_292 );

    SC_METHOD(thread_tmp_96_fu_354_p1);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_260_p4 );

    SC_METHOD(thread_tmp_user_V_fu_312_p1);
    sensitive << ( stream_in_TUSER );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( stream_in_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_phi_mux_eol_2_phi_fu_295_p4 );
    sensitive << ( exitcond5_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( eol_2_reg_292 );
    sensitive << ( tmp_user_V_fu_312_p1 );

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2Mat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, stream_in_TDATA, "(port)stream_in_TDATA");
    sc_trace(mVcdFile, stream_in_TVALID, "(port)stream_in_TVALID");
    sc_trace(mVcdFile, stream_in_TREADY, "(port)stream_in_TREADY");
    sc_trace(mVcdFile, stream_in_TKEEP, "(port)stream_in_TKEEP");
    sc_trace(mVcdFile, stream_in_TSTRB, "(port)stream_in_TSTRB");
    sc_trace(mVcdFile, stream_in_TUSER, "(port)stream_in_TUSER");
    sc_trace(mVcdFile, stream_in_TLAST, "(port)stream_in_TLAST");
    sc_trace(mVcdFile, stream_in_TID, "(port)stream_in_TID");
    sc_trace(mVcdFile, stream_in_TDEST, "(port)stream_in_TDEST");
    sc_trace(mVcdFile, img_data_stream_0_V_din, "(port)img_data_stream_0_V_din");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "(port)img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_write, "(port)img_data_stream_0_V_write");
    sc_trace(mVcdFile, img_data_stream_1_V_din, "(port)img_data_stream_1_V_din");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "(port)img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_write, "(port)img_data_stream_1_V_write");
    sc_trace(mVcdFile, img_data_stream_2_V_din, "(port)img_data_stream_2_V_din");
    sc_trace(mVcdFile, img_data_stream_2_V_full_n, "(port)img_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_data_stream_2_V_write, "(port)img_data_stream_2_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, stream_in_TDATA_blk_n, "stream_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, exitcond_fu_333_p2, "exitcond_fu_333_p2");
    sc_trace(mVcdFile, brmerge_fu_348_p2, "brmerge_fu_348_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_phi_fu_295_p4, "ap_phi_mux_eol_2_phi_fu_295_p4");
    sc_trace(mVcdFile, img_data_stream_0_V_blk_n, "img_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, exitcond_reg_412, "exitcond_reg_412");
    sc_trace(mVcdFile, img_data_stream_1_V_blk_n, "img_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_2_V_blk_n, "img_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, eol_1_reg_198, "eol_1_reg_198");
    sc_trace(mVcdFile, axi_data_V_1_reg_209, "axi_data_V_1_reg_209");
    sc_trace(mVcdFile, t_V_3_reg_220, "t_V_3_reg_220");
    sc_trace(mVcdFile, eol_reg_231, "eol_reg_231");
    sc_trace(mVcdFile, axi_last_V_2_reg_243, "axi_last_V_2_reg_243");
    sc_trace(mVcdFile, p_Val2_s_reg_256, "p_Val2_s_reg_256");
    sc_trace(mVcdFile, tmp_data_V_reg_383, "tmp_data_V_reg_383");
    sc_trace(mVcdFile, tmp_last_V_reg_391, "tmp_last_V_reg_391");
    sc_trace(mVcdFile, exitcond5_fu_321_p2, "exitcond5_fu_321_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_V_fu_327_p2, "i_V_fu_327_p2");
    sc_trace(mVcdFile, i_V_reg_407, "i_V_reg_407");
    sc_trace(mVcdFile, ap_predicate_op50_read_state5, "ap_predicate_op50_read_state5");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_339_p2, "j_V_fu_339_p2");
    sc_trace(mVcdFile, tmp_96_fu_354_p1, "tmp_96_fu_354_p1");
    sc_trace(mVcdFile, tmp_96_reg_425, "tmp_96_reg_425");
    sc_trace(mVcdFile, tmp_32_reg_430, "tmp_32_reg_430");
    sc_trace(mVcdFile, tmp_33_reg_435, "tmp_33_reg_435");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, axi_last_V_3_reg_268, "axi_last_V_3_reg_268");
    sc_trace(mVcdFile, axi_last_V1_reg_167, "axi_last_V1_reg_167");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V_3_reg_280, "axi_data_V_3_reg_280");
    sc_trace(mVcdFile, axi_data_V1_reg_177, "axi_data_V1_reg_177");
    sc_trace(mVcdFile, t_V_reg_187, "t_V_reg_187");
    sc_trace(mVcdFile, ap_phi_mux_eol_1_phi_fu_201_p4, "ap_phi_mux_eol_1_phi_fu_201_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_data_V_1_phi_fu_212_p4, "ap_phi_mux_axi_data_V_1_phi_fu_212_p4");
    sc_trace(mVcdFile, ap_phi_mux_eol_phi_fu_235_p4, "ap_phi_mux_eol_phi_fu_235_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243, "ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_260_p4, "ap_phi_mux_p_Val2_s_phi_fu_260_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_p_Val2_s_reg_256, "ap_phi_reg_pp1_iter0_p_Val2_s_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, eol_2_reg_292, "eol_2_reg_292");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, sof_1_fu_124, "sof_1_fu_124");
    sc_trace(mVcdFile, tmp_user_V_fu_312_p1, "tmp_user_V_fu_312_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_condition_225, "ap_condition_225");
    sc_trace(mVcdFile, ap_condition_145, "ap_condition_145");
#endif

    }
}

AXIvideo2Mat::~AXIvideo2Mat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void AXIvideo2Mat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V1_reg_177 = tmp_data_V_reg_383.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_data_V1_reg_177 = axi_data_V_3_reg_280.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_reg_209 = p_Val2_s_reg_256.read();
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        axi_data_V_1_reg_209 = axi_data_V1_reg_177.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_reg_280 = axi_data_V_1_reg_209.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        axi_data_V_3_reg_280 = stream_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V1_reg_167 = tmp_last_V_reg_391.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_last_V1_reg_167 = axi_last_V_3_reg_268.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_145.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(brmerge_fu_348_p2.read(), ap_const_lv1_1))) {
            axi_last_V_2_reg_243 = ap_phi_mux_eol_1_phi_fu_201_p4.read();
        } else if ((esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_348_p2.read()))) {
            axi_last_V_2_reg_243 = stream_in_TLAST.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            axi_last_V_2_reg_243 = ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_reg_268 = eol_1_reg_198.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        axi_last_V_3_reg_268 = stream_in_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_1_reg_198 = axi_last_V_2_reg_243.read();
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_1_reg_198 = axi_last_V1_reg_167.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_reg_292 = eol_reg_231.read();
    } else if ((!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && 
                esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        eol_2_reg_292 = stream_in_TLAST.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_231 = axi_last_V_2_reg_243.read();
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        eol_reg_231 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_145.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(brmerge_fu_348_p2.read(), ap_const_lv1_1))) {
            p_Val2_s_reg_256 = ap_phi_mux_axi_data_V_1_phi_fu_212_p4.read();
        } else if ((esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_348_p2.read()))) {
            p_Val2_s_reg_256 = stream_in_TDATA.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            p_Val2_s_reg_256 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_256.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        sof_1_fu_124 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_fu_124 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        t_V_3_reg_220 = j_V_fu_339_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_V_3_reg_220 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_V_reg_187 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_V_reg_187 = i_V_reg_407.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_412 = exitcond_fu_333_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_407 = i_V_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_32_reg_430 = ap_phi_mux_p_Val2_s_phi_fu_260_p4.read().range(15, 8);
        tmp_33_reg_435 = ap_phi_mux_p_Val2_s_phi_fu_260_p4.read().range(23, 16);
        tmp_96_reg_425 = tmp_96_fu_354_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_1))) {
        tmp_data_V_reg_383 = stream_in_TDATA.read();
        tmp_last_V_reg_391 = stream_in_TLAST.read();
    }
}

void AXIvideo2Mat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void AXIvideo2Mat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state5.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || 
   (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())))));
}

void AXIvideo2Mat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = (esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state5.read()));
}

void AXIvideo2Mat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_full_n.read())));
}

void AXIvideo2Mat::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0));
}

void AXIvideo2Mat::thread_ap_condition_145() {
    ap_condition_145 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0));
}

void AXIvideo2Mat::thread_ap_condition_225() {
    ap_condition_225 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0));
}

void AXIvideo2Mat::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2Mat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_axi_data_V_1_phi_fu_212_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        ap_phi_mux_axi_data_V_1_phi_fu_212_p4 = p_Val2_s_reg_256.read();
    } else {
        ap_phi_mux_axi_data_V_1_phi_fu_212_p4 = axi_data_V_1_reg_209.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_1_phi_fu_201_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        ap_phi_mux_eol_1_phi_fu_201_p4 = axi_last_V_2_reg_243.read();
    } else {
        ap_phi_mux_eol_1_phi_fu_201_p4 = eol_1_reg_198.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_2_phi_fu_295_p4() {
    ap_phi_mux_eol_2_phi_fu_295_p4 = eol_2_reg_292.read();
}

void AXIvideo2Mat::thread_ap_phi_mux_eol_phi_fu_235_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        ap_phi_mux_eol_phi_fu_235_p4 = axi_last_V_2_reg_243.read();
    } else {
        ap_phi_mux_eol_phi_fu_235_p4 = eol_reg_231.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_mux_p_Val2_s_phi_fu_260_p4() {
    if (esl_seteq<1,1,1>(ap_condition_225.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(brmerge_fu_348_p2.read(), ap_const_lv1_1)) {
            ap_phi_mux_p_Val2_s_phi_fu_260_p4 = ap_phi_mux_axi_data_V_1_phi_fu_212_p4.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_348_p2.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_260_p4 = stream_in_TDATA.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_260_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_256.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_260_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_256.read();
    }
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243() {
    ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243 =  (sc_lv<1>) ("X");
}

void AXIvideo2Mat::thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_256() {
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_256 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
}

void AXIvideo2Mat::thread_ap_predicate_op50_read_state5() {
    ap_predicate_op50_read_state5 = (esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_348_p2.read()));
}

void AXIvideo2Mat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_brmerge_fu_348_p2() {
    brmerge_fu_348_p2 = (sof_1_fu_124.read() | ap_phi_mux_eol_phi_fu_235_p4.read());
}

void AXIvideo2Mat::thread_exitcond5_fu_321_p2() {
    exitcond5_fu_321_p2 = (!t_V_reg_187.read().is_01() || !ap_const_lv11_41A.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_187.read() == ap_const_lv11_41A);
}

void AXIvideo2Mat::thread_exitcond_fu_333_p2() {
    exitcond_fu_333_p2 = (!t_V_3_reg_220.read().is_01() || !ap_const_lv11_690.is_01())? sc_lv<1>(): sc_lv<1>(t_V_3_reg_220.read() == ap_const_lv11_690);
}

void AXIvideo2Mat::thread_i_V_fu_327_p2() {
    i_V_fu_327_p2 = (!t_V_reg_187.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_reg_187.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat::thread_img_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        img_data_stream_0_V_blk_n = img_data_stream_0_V_full_n.read();
    } else {
        img_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_0_V_din() {
    img_data_stream_0_V_din = tmp_96_reg_425.read();
}

void AXIvideo2Mat::thread_img_data_stream_0_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_0_V_write = ap_const_logic_1;
    } else {
        img_data_stream_0_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        img_data_stream_1_V_blk_n = img_data_stream_1_V_full_n.read();
    } else {
        img_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_1_V_din() {
    img_data_stream_1_V_din = tmp_32_reg_430.read();
}

void AXIvideo2Mat::thread_img_data_stream_1_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_1_V_write = ap_const_logic_1;
    } else {
        img_data_stream_1_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_img_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()))) {
        img_data_stream_2_V_blk_n = img_data_stream_2_V_full_n.read();
    } else {
        img_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_img_data_stream_2_V_din() {
    img_data_stream_2_V_din = tmp_33_reg_435.read();
}

void AXIvideo2Mat::thread_img_data_stream_2_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_412.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_2_V_write = ap_const_logic_1;
    } else {
        img_data_stream_2_V_write = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_j_V_fu_339_p2() {
    j_V_fu_339_p2 = (!t_V_3_reg_220.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_3_reg_220.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2Mat::thread_stream_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, brmerge_fu_348_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0)))) {
        stream_in_TDATA_blk_n = stream_in_TVALID.read();
    } else {
        stream_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2Mat::thread_stream_in_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_1)) || 
         (!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op50_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_in_TREADY = ap_const_logic_1;
    } else {
        stream_in_TREADY = ap_const_logic_0;
    }
}

void AXIvideo2Mat::thread_tmp_96_fu_354_p1() {
    tmp_96_fu_354_p1 = ap_phi_mux_p_Val2_s_phi_fu_260_p4.read().range(8-1, 0);
}

void AXIvideo2Mat::thread_tmp_user_V_fu_312_p1() {
    tmp_user_V_fu_312_p1 = stream_in_TUSER.read();
}

void AXIvideo2Mat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_user_V_fu_312_p1.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_user_V_fu_312_p1.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond5_fu_321_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(exitcond_fu_333_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((!(esl_seteq<1,1,1>(eol_2_reg_292.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(stream_in_TVALID.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_phi_mux_eol_2_phi_fu_295_p4.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

