// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AXIvideo2Mat_HH_
#define _AXIvideo2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct AXIvideo2Mat : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_in< sc_lv<3> > stream_in_TKEEP;
    sc_in< sc_lv<3> > stream_in_TSTRB;
    sc_in< sc_lv<1> > stream_in_TUSER;
    sc_in< sc_lv<1> > stream_in_TLAST;
    sc_in< sc_lv<1> > stream_in_TID;
    sc_in< sc_lv<1> > stream_in_TDEST;
    sc_out< sc_lv<8> > img_data_stream_0_V_din;
    sc_in< sc_logic > img_data_stream_0_V_full_n;
    sc_out< sc_logic > img_data_stream_0_V_write;
    sc_out< sc_lv<8> > img_data_stream_1_V_din;
    sc_in< sc_logic > img_data_stream_1_V_full_n;
    sc_out< sc_logic > img_data_stream_1_V_write;
    sc_out< sc_lv<8> > img_data_stream_2_V_din;
    sc_in< sc_logic > img_data_stream_2_V_full_n;
    sc_out< sc_logic > img_data_stream_2_V_write;


    // Module declarations
    AXIvideo2Mat(sc_module_name name);
    SC_HAS_PROCESS(AXIvideo2Mat);

    ~AXIvideo2Mat();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > stream_in_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > exitcond_fu_333_p2;
    sc_signal< sc_lv<1> > brmerge_fu_348_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > ap_phi_mux_eol_2_phi_fu_295_p4;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond_reg_412;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_data_stream_2_V_blk_n;
    sc_signal< sc_lv<1> > eol_1_reg_198;
    sc_signal< sc_lv<24> > axi_data_V_1_reg_209;
    sc_signal< sc_lv<11> > t_V_3_reg_220;
    sc_signal< sc_lv<1> > eol_reg_231;
    sc_signal< sc_lv<1> > axi_last_V_2_reg_243;
    sc_signal< sc_lv<24> > p_Val2_s_reg_256;
    sc_signal< sc_lv<24> > tmp_data_V_reg_383;
    sc_signal< sc_lv<1> > tmp_last_V_reg_391;
    sc_signal< sc_lv<1> > exitcond6_fu_321_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > i_V_fu_327_p2;
    sc_signal< sc_lv<11> > i_V_reg_407;
    sc_signal< bool > ap_predicate_op50_read_state5;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<11> > j_V_fu_339_p2;
    sc_signal< sc_lv<8> > tmp_96_fu_354_p1;
    sc_signal< sc_lv<8> > tmp_96_reg_425;
    sc_signal< sc_lv<8> > tmp_32_reg_430;
    sc_signal< sc_lv<8> > tmp_33_reg_435;
    sc_signal< bool > ap_block_state8;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_lv<1> > axi_last_V_3_reg_268;
    sc_signal< sc_lv<1> > axi_last_V1_reg_167;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<24> > axi_data_V_3_reg_280;
    sc_signal< sc_lv<24> > axi_data_V1_reg_177;
    sc_signal< sc_lv<11> > t_V_reg_187;
    sc_signal< sc_lv<1> > ap_phi_mux_eol_1_phi_fu_201_p4;
    sc_signal< sc_lv<24> > ap_phi_mux_axi_data_V_1_phi_fu_212_p4;
    sc_signal< sc_lv<1> > ap_phi_mux_eol_phi_fu_235_p4;
    sc_signal< sc_lv<1> > ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243;
    sc_signal< sc_lv<24> > ap_phi_mux_p_Val2_s_phi_fu_260_p4;
    sc_signal< sc_lv<24> > ap_phi_reg_pp1_iter0_p_Val2_s_reg_256;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > eol_2_reg_292;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<1> > sof_1_fu_124;
    sc_signal< sc_lv<1> > tmp_user_V_fu_312_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_225;
    sc_signal< bool > ap_condition_145;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<11> ap_const_lv11_41A;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_690;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state8();
    void thread_ap_condition_145();
    void thread_ap_condition_225();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_axi_data_V_1_phi_fu_212_p4();
    void thread_ap_phi_mux_eol_1_phi_fu_201_p4();
    void thread_ap_phi_mux_eol_2_phi_fu_295_p4();
    void thread_ap_phi_mux_eol_phi_fu_235_p4();
    void thread_ap_phi_mux_p_Val2_s_phi_fu_260_p4();
    void thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_243();
    void thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_256();
    void thread_ap_predicate_op50_read_state5();
    void thread_ap_ready();
    void thread_brmerge_fu_348_p2();
    void thread_exitcond6_fu_321_p2();
    void thread_exitcond_fu_333_p2();
    void thread_i_V_fu_327_p2();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_din();
    void thread_img_data_stream_0_V_write();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_din();
    void thread_img_data_stream_1_V_write();
    void thread_img_data_stream_2_V_blk_n();
    void thread_img_data_stream_2_V_din();
    void thread_img_data_stream_2_V_write();
    void thread_j_V_fu_339_p2();
    void thread_stream_in_TDATA_blk_n();
    void thread_stream_in_TREADY();
    void thread_tmp_96_fu_354_p1();
    void thread_tmp_user_V_fu_312_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
