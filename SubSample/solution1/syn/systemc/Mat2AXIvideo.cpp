// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Mat2AXIvideo.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Mat2AXIvideo::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Mat2AXIvideo::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Mat2AXIvideo::ap_ST_fsm_state1 = "1";
const sc_lv<4> Mat2AXIvideo::ap_ST_fsm_state2 = "10";
const sc_lv<4> Mat2AXIvideo::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Mat2AXIvideo::ap_ST_fsm_state5 = "1000";
const bool Mat2AXIvideo::ap_const_boolean_1 = true;
const sc_lv<32> Mat2AXIvideo::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Mat2AXIvideo::ap_const_lv32_2 = "10";
const bool Mat2AXIvideo::ap_const_boolean_0 = false;
const sc_lv<1> Mat2AXIvideo::ap_const_lv1_0 = "0";
const sc_lv<32> Mat2AXIvideo::ap_const_lv32_1 = "1";
const sc_lv<1> Mat2AXIvideo::ap_const_lv1_1 = "1";
const sc_lv<32> Mat2AXIvideo::ap_const_lv32_3 = "11";
const sc_lv<11> Mat2AXIvideo::ap_const_lv11_0 = "00000000000";
const sc_lv<3> Mat2AXIvideo::ap_const_lv3_7 = "111";
const sc_lv<3> Mat2AXIvideo::ap_const_lv3_0 = "000";
const sc_lv<11> Mat2AXIvideo::ap_const_lv11_41A = "10000011010";
const sc_lv<11> Mat2AXIvideo::ap_const_lv11_1 = "1";
const sc_lv<11> Mat2AXIvideo::ap_const_lv11_690 = "11010010000";
const sc_lv<11> Mat2AXIvideo::ap_const_lv11_68F = "11010001111";

Mat2AXIvideo::Mat2AXIvideo(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_data_stream_0_V_empty_n );
    sensitive << ( img_data_stream_1_V_empty_n );
    sensitive << ( img_data_stream_2_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_data_stream_0_V_empty_n );
    sensitive << ( img_data_stream_1_V_empty_n );
    sensitive << ( img_data_stream_2_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_data_stream_0_V_empty_n );
    sensitive << ( img_data_stream_1_V_empty_n );
    sensitive << ( img_data_stream_2_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_sig_ioackin_stream_passThrough_TREADY );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( img_data_stream_0_V_empty_n );
    sensitive << ( img_data_stream_1_V_empty_n );
    sensitive << ( img_data_stream_2_V_empty_n );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_ap_condition_206);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_fu_214_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond4_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond4_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_sig_ioackin_stream_passThrough_TREADY);
    sensitive << ( stream_passThrough_TREADY );
    sensitive << ( ap_reg_ioackin_stream_passThrough_TREADY );

    SC_METHOD(thread_axi_last_V_fu_226_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_1_reg_186 );
    sensitive << ( exitcond_fu_214_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond4_fu_202_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_175 );

    SC_METHOD(thread_exitcond_fu_214_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_1_reg_186 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_V_fu_208_p2);
    sensitive << ( t_V_reg_175 );

    SC_METHOD(thread_img_data_stream_0_V_blk_n);
    sensitive << ( img_data_stream_0_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_img_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_data_stream_1_V_blk_n);
    sensitive << ( img_data_stream_1_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_img_data_stream_1_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_data_stream_2_V_blk_n);
    sensitive << ( img_data_stream_2_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_img_data_stream_2_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_j_V_fu_220_p2);
    sensitive << ( t_V_1_reg_186 );

    SC_METHOD(thread_stream_passThrough_TDATA);
    sensitive << ( img_data_stream_0_V_dout );
    sensitive << ( img_data_stream_1_V_dout );
    sensitive << ( img_data_stream_2_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TDATA_blk_n);
    sensitive << ( stream_passThrough_TREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_268 );

    SC_METHOD(thread_stream_passThrough_TDEST);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TKEEP);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TLAST);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( axi_last_V_reg_277 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TSTRB);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TUSER);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( tmp_user_V_fu_124 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_stream_passThrough_TVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_268 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_reg_ioackin_stream_passThrough_TREADY );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond4_fu_202_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_214_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_stream_passThrough_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Mat2AXIvideo_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_data_stream_0_V_dout, "(port)img_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_data_stream_0_V_empty_n, "(port)img_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_0_V_read, "(port)img_data_stream_0_V_read");
    sc_trace(mVcdFile, img_data_stream_1_V_dout, "(port)img_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_data_stream_1_V_empty_n, "(port)img_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_1_V_read, "(port)img_data_stream_1_V_read");
    sc_trace(mVcdFile, img_data_stream_2_V_dout, "(port)img_data_stream_2_V_dout");
    sc_trace(mVcdFile, img_data_stream_2_V_empty_n, "(port)img_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_2_V_read, "(port)img_data_stream_2_V_read");
    sc_trace(mVcdFile, stream_passThrough_TDATA, "(port)stream_passThrough_TDATA");
    sc_trace(mVcdFile, stream_passThrough_TVALID, "(port)stream_passThrough_TVALID");
    sc_trace(mVcdFile, stream_passThrough_TREADY, "(port)stream_passThrough_TREADY");
    sc_trace(mVcdFile, stream_passThrough_TKEEP, "(port)stream_passThrough_TKEEP");
    sc_trace(mVcdFile, stream_passThrough_TSTRB, "(port)stream_passThrough_TSTRB");
    sc_trace(mVcdFile, stream_passThrough_TUSER, "(port)stream_passThrough_TUSER");
    sc_trace(mVcdFile, stream_passThrough_TLAST, "(port)stream_passThrough_TLAST");
    sc_trace(mVcdFile, stream_passThrough_TID, "(port)stream_passThrough_TID");
    sc_trace(mVcdFile, stream_passThrough_TDEST, "(port)stream_passThrough_TDEST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_data_stream_0_V_blk_n, "img_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_268, "exitcond_reg_268");
    sc_trace(mVcdFile, img_data_stream_1_V_blk_n, "img_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, img_data_stream_2_V_blk_n, "img_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, stream_passThrough_TDATA_blk_n, "stream_passThrough_TDATA_blk_n");
    sc_trace(mVcdFile, t_V_1_reg_186, "t_V_1_reg_186");
    sc_trace(mVcdFile, exitcond4_fu_202_p2, "exitcond4_fu_202_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_V_fu_208_p2, "i_V_fu_208_p2");
    sc_trace(mVcdFile, i_V_reg_263, "i_V_reg_263");
    sc_trace(mVcdFile, exitcond_fu_214_p2, "exitcond_fu_214_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_stream_passThrough_TREADY, "ap_sig_ioackin_stream_passThrough_TREADY");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_V_fu_220_p2, "j_V_fu_220_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, axi_last_V_fu_226_p2, "axi_last_V_fu_226_p2");
    sc_trace(mVcdFile, axi_last_V_reg_277, "axi_last_V_reg_277");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, t_V_reg_175, "t_V_reg_175");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_user_V_fu_124, "tmp_user_V_fu_124");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_reg_ioackin_stream_passThrough_TREADY, "ap_reg_ioackin_stream_passThrough_TREADY");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_206, "ap_condition_206");
#endif

    }
}

Mat2AXIvideo::~Mat2AXIvideo() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Mat2AXIvideo::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()) && 
             esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ioackin_stream_passThrough_TREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_206.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_stream_passThrough_TREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
                        esl_seteq<1,1,1>(ap_const_logic_1, stream_passThrough_TREADY.read()))) {
                ap_reg_ioackin_stream_passThrough_TREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_214_p2.read()))) {
        t_V_1_reg_186 = j_V_fu_220_p2.read();
    } else if ((esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        t_V_1_reg_186 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        t_V_reg_175 = ap_const_lv11_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_reg_175 = i_V_reg_263.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_user_V_fu_124 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        tmp_user_V_fu_124 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_214_p2.read()))) {
        axi_last_V_reg_277 = axi_last_V_fu_226_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_268 = exitcond_fu_214_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_V_reg_263 = i_V_fu_208_p2.read();
    }
}

void Mat2AXIvideo::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Mat2AXIvideo::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Mat2AXIvideo::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Mat2AXIvideo::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void Mat2AXIvideo::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Mat2AXIvideo::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_empty_n.read()))));
}

void Mat2AXIvideo::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_empty_n.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void Mat2AXIvideo::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_empty_n.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())));
}

void Mat2AXIvideo::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Mat2AXIvideo::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_stream_passThrough_TREADY.read()));
}

void Mat2AXIvideo::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_0_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_1_V_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_2_V_empty_n.read())));
}

void Mat2AXIvideo::thread_ap_condition_206() {
    ap_condition_206 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0));
}

void Mat2AXIvideo::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_fu_214_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Mat2AXIvideo::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_sig_ioackin_stream_passThrough_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stream_passThrough_TREADY.read())) {
        ap_sig_ioackin_stream_passThrough_TREADY = stream_passThrough_TREADY.read();
    } else {
        ap_sig_ioackin_stream_passThrough_TREADY = ap_const_logic_1;
    }
}

void Mat2AXIvideo::thread_axi_last_V_fu_226_p2() {
    axi_last_V_fu_226_p2 = (!t_V_1_reg_186.read().is_01() || !ap_const_lv11_68F.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_186.read() == ap_const_lv11_68F);
}

void Mat2AXIvideo::thread_exitcond4_fu_202_p2() {
    exitcond4_fu_202_p2 = (!t_V_reg_175.read().is_01() || !ap_const_lv11_41A.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_175.read() == ap_const_lv11_41A);
}

void Mat2AXIvideo::thread_exitcond_fu_214_p2() {
    exitcond_fu_214_p2 = (!t_V_1_reg_186.read().is_01() || !ap_const_lv11_690.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_186.read() == ap_const_lv11_690);
}

void Mat2AXIvideo::thread_i_V_fu_208_p2() {
    i_V_fu_208_p2 = (!t_V_reg_175.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_reg_175.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Mat2AXIvideo::thread_img_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0))) {
        img_data_stream_0_V_blk_n = img_data_stream_0_V_empty_n.read();
    } else {
        img_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void Mat2AXIvideo::thread_img_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_0_V_read = ap_const_logic_1;
    } else {
        img_data_stream_0_V_read = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_img_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0))) {
        img_data_stream_1_V_blk_n = img_data_stream_1_V_empty_n.read();
    } else {
        img_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void Mat2AXIvideo::thread_img_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_1_V_read = ap_const_logic_1;
    } else {
        img_data_stream_1_V_read = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_img_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0))) {
        img_data_stream_2_V_blk_n = img_data_stream_2_V_empty_n.read();
    } else {
        img_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void Mat2AXIvideo::thread_img_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_2_V_read = ap_const_logic_1;
    } else {
        img_data_stream_2_V_read = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_j_V_fu_220_p2() {
    j_V_fu_220_p2 = (!t_V_1_reg_186.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_1_reg_186.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void Mat2AXIvideo::thread_stream_passThrough_TDATA() {
    stream_passThrough_TDATA = esl_concat<16,8>(esl_concat<8,8>(img_data_stream_2_V_dout.read(), img_data_stream_1_V_dout.read()), img_data_stream_0_V_dout.read());
}

void Mat2AXIvideo::thread_stream_passThrough_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0))) {
        stream_passThrough_TDATA_blk_n = stream_passThrough_TREADY.read();
    } else {
        stream_passThrough_TDATA_blk_n = ap_const_logic_1;
    }
}

void Mat2AXIvideo::thread_stream_passThrough_TDEST() {
    stream_passThrough_TDEST = ap_const_lv1_0;
}

void Mat2AXIvideo::thread_stream_passThrough_TID() {
    stream_passThrough_TID = ap_const_lv1_0;
}

void Mat2AXIvideo::thread_stream_passThrough_TKEEP() {
    stream_passThrough_TKEEP = ap_const_lv3_7;
}

void Mat2AXIvideo::thread_stream_passThrough_TLAST() {
    stream_passThrough_TLAST = axi_last_V_reg_277.read();
}

void Mat2AXIvideo::thread_stream_passThrough_TSTRB() {
    stream_passThrough_TSTRB = ap_const_lv3_0;
}

void Mat2AXIvideo::thread_stream_passThrough_TUSER() {
    stream_passThrough_TUSER = tmp_user_V_fu_124.read();
}

void Mat2AXIvideo::thread_stream_passThrough_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_268.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_stream_passThrough_TREADY.read()))) {
        stream_passThrough_TVALID = ap_const_logic_1;
    } else {
        stream_passThrough_TVALID = ap_const_logic_0;
    }
}

void Mat2AXIvideo::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond4_fu_202_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(exitcond_fu_214_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(exitcond_fu_214_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

