// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _CvtColor_HH_
#define _CvtColor_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "subsamble_mul_mulbkb.h"
#include "subsamble_mac_mulcud.h"
#include "subsamble_mac_muldEe.h"

namespace ap_rtl {

struct CvtColor : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > p_src_data_stream_0_V_dout;
    sc_in< sc_logic > p_src_data_stream_0_V_empty_n;
    sc_out< sc_logic > p_src_data_stream_0_V_read;
    sc_in< sc_lv<8> > p_src_data_stream_1_V_dout;
    sc_in< sc_logic > p_src_data_stream_1_V_empty_n;
    sc_out< sc_logic > p_src_data_stream_1_V_read;
    sc_in< sc_lv<8> > p_src_data_stream_2_V_dout;
    sc_in< sc_logic > p_src_data_stream_2_V_empty_n;
    sc_out< sc_logic > p_src_data_stream_2_V_read;
    sc_out< sc_lv<8> > p_dst_data_stream_0_V_din;
    sc_in< sc_logic > p_dst_data_stream_0_V_full_n;
    sc_out< sc_logic > p_dst_data_stream_0_V_write;
    sc_out< sc_lv<8> > p_dst_data_stream_1_V_din;
    sc_in< sc_logic > p_dst_data_stream_1_V_full_n;
    sc_out< sc_logic > p_dst_data_stream_1_V_write;
    sc_out< sc_lv<8> > p_dst_data_stream_2_V_din;
    sc_in< sc_logic > p_dst_data_stream_2_V_full_n;
    sc_out< sc_logic > p_dst_data_stream_2_V_write;


    // Module declarations
    CvtColor(sc_module_name name);
    SC_HAS_PROCESS(CvtColor);

    ~CvtColor();

    sc_trace_file* mVcdFile;

    subsamble_mul_mulbkb<1,1,8,22,29>* subsamble_mul_mulbkb_U11;
    subsamble_mac_mulcud<1,1,8,23,29,30>* subsamble_mac_mulcud_U12;
    subsamble_mac_muldEe<1,1,8,20,29,29>* subsamble_mac_muldEe_U13;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > p_src_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_19_reg_280;
    sc_signal< sc_logic > p_src_data_stream_1_V_blk_n;
    sc_signal< sc_logic > p_src_data_stream_2_V_blk_n;
    sc_signal< sc_logic > p_dst_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > tmp_19_reg_280_pp0_iter3_reg;
    sc_signal< sc_logic > p_dst_data_stream_1_V_blk_n;
    sc_signal< sc_logic > p_dst_data_stream_2_V_blk_n;
    sc_signal< sc_lv<11> > j_reg_138;
    sc_signal< sc_lv<1> > tmp_s_fu_149_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > i_1_fu_155_p2;
    sc_signal< sc_lv<11> > i_1_reg_275;
    sc_signal< sc_lv<1> > tmp_19_fu_161_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > tmp_19_reg_280_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_19_reg_280_pp0_iter2_reg;
    sc_signal< sc_lv<11> > j_1_fu_167_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > tmp_101_reg_289;
    sc_signal< sc_lv<8> > tmp_102_reg_294;
    sc_signal< sc_lv<8> > tmp_102_reg_294_pp0_iter2_reg;
    sc_signal< sc_lv<8> > tmp_103_reg_299;
    sc_signal< sc_lv<8> > tmp_103_reg_299_pp0_iter2_reg;
    sc_signal< sc_lv<29> > r_V_i_fu_247_p2;
    sc_signal< sc_lv<29> > r_V_i_reg_304;
    sc_signal< sc_lv<30> > grp_fu_253_p3;
    sc_signal< sc_lv<30> > r_V_1_reg_309;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<8> > p_Val2_14_reg_314;
    sc_signal< sc_lv<1> > tmp_97_reg_319;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<11> > i_reg_127;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > p_Val2_s_fu_236_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<29> > grp_fu_263_p3;
    sc_signal< sc_lv<8> > tmp_3_i_i_i_fu_201_p1;
    sc_signal< sc_lv<8> > p_Val2_15_fu_211_p2;
    sc_signal< sc_lv<1> > tmp_98_fu_204_p3;
    sc_signal< sc_lv<1> > tmp_99_fu_216_p3;
    sc_signal< sc_lv<1> > p_Result_2_i_i_i_n_fu_224_p2;
    sc_signal< sc_lv<1> > not_carry_fu_230_p2;
    sc_signal< sc_lv<8> > r_V_i_fu_247_p0;
    sc_signal< sc_lv<22> > r_V_i_fu_247_p1;
    sc_signal< sc_lv<8> > grp_fu_253_p0;
    sc_signal< sc_lv<23> > grp_fu_253_p1;
    sc_signal< sc_lv<29> > grp_fu_253_p2;
    sc_signal< sc_lv<8> > grp_fu_263_p0;
    sc_signal< sc_lv<20> > grp_fu_263_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<30> > grp_fu_253_p00;
    sc_signal< sc_lv<30> > grp_fu_253_p20;
    sc_signal< sc_lv<28> > grp_fu_263_p00;
    sc_signal< sc_lv<29> > r_V_i_fu_247_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_41A;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_690;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<29> ap_const_lv29_1322D0;
    static const sc_lv<30> ap_const_lv30_259168;
    static const sc_lv<28> ap_const_lv28_74BC6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_grp_fu_253_p0();
    void thread_grp_fu_253_p00();
    void thread_grp_fu_253_p1();
    void thread_grp_fu_253_p2();
    void thread_grp_fu_253_p20();
    void thread_grp_fu_263_p0();
    void thread_grp_fu_263_p00();
    void thread_grp_fu_263_p1();
    void thread_i_1_fu_155_p2();
    void thread_internal_ap_ready();
    void thread_j_1_fu_167_p2();
    void thread_not_carry_fu_230_p2();
    void thread_p_Result_2_i_i_i_n_fu_224_p2();
    void thread_p_Val2_15_fu_211_p2();
    void thread_p_Val2_s_fu_236_p3();
    void thread_p_dst_data_stream_0_V_blk_n();
    void thread_p_dst_data_stream_0_V_din();
    void thread_p_dst_data_stream_0_V_write();
    void thread_p_dst_data_stream_1_V_blk_n();
    void thread_p_dst_data_stream_1_V_din();
    void thread_p_dst_data_stream_1_V_write();
    void thread_p_dst_data_stream_2_V_blk_n();
    void thread_p_dst_data_stream_2_V_din();
    void thread_p_dst_data_stream_2_V_write();
    void thread_p_src_data_stream_0_V_blk_n();
    void thread_p_src_data_stream_0_V_read();
    void thread_p_src_data_stream_1_V_blk_n();
    void thread_p_src_data_stream_1_V_read();
    void thread_p_src_data_stream_2_V_blk_n();
    void thread_p_src_data_stream_2_V_read();
    void thread_r_V_i_fu_247_p0();
    void thread_r_V_i_fu_247_p00();
    void thread_r_V_i_fu_247_p1();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp_19_fu_161_p2();
    void thread_tmp_3_i_i_i_fu_201_p1();
    void thread_tmp_98_fu_204_p3();
    void thread_tmp_99_fu_216_p3();
    void thread_tmp_s_fu_149_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
